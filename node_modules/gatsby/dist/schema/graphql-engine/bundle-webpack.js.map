{"version":3,"file":"bundle-webpack.js","names":["extensions","outputDir","path","join","process","cwd","cacheLocation","createGraphqlEngineBundle","rootDir","reporter","isVerbose","schemaSnapshotString","fs","readFile","printQueryEnginePlugins","assetRelocatorUseEntry","loader","require","resolve","options","outputAssetBase","compiler","webpack","name","mode","entry","__dirname","output","filename","libraryTarget","target","externalsPresets","node","cache","type","buildDependencies","config","__filename","externals","mod","builtinModules","reduce","acc","builtinModule","module","rules","oneOf","test","parser","amd","use","byDependency","esm","fullySpecified","exclude","presets","alias","inquirer","lmdb","plugins","DefinePlugin","SCHEMA_SNAPSHOT","JSON","stringify","env","GATSBY_WEBPACK_LOGGING","includes","WebpackLoggingPlugin","filter","Boolean","Promise","reject","run","err","stats","close","closeErr","compilation"],"sources":["../../../src/schema/graphql-engine/bundle-webpack.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/naming-convention */\n\nimport * as path from \"path\"\nimport * as fs from \"fs-extra\"\nimport webpack from \"webpack\"\nimport { printQueryEnginePlugins } from \"./print-plugins\"\nimport mod from \"module\"\nimport { WebpackLoggingPlugin } from \"../../utils/webpack/plugins/webpack-logging\"\nimport reporter from \"gatsby-cli/lib/reporter\"\n\ntype Reporter = typeof reporter\n\nconst extensions = [`.mjs`, `.js`, `.json`, `.node`, `.ts`, `.tsx`]\n\nconst outputDir = path.join(process.cwd(), `.cache`, `query-engine`)\nconst cacheLocation = path.join(\n  process.cwd(),\n  `.cache`,\n  `webpack`,\n  `query-engine`\n)\n\nexport async function createGraphqlEngineBundle(\n  rootDir: string,\n  reporter: Reporter,\n  isVerbose?: boolean\n): Promise<webpack.Compilation | undefined> {\n  const schemaSnapshotString = await fs.readFile(\n    path.join(rootDir, `.cache`, `schema.gql`),\n    `utf-8`\n  )\n  await printQueryEnginePlugins()\n\n  const assetRelocatorUseEntry = {\n    loader: require.resolve(`@vercel/webpack-asset-relocator-loader`),\n    options: {\n      outputAssetBase: `assets`,\n    },\n  }\n\n  const compiler = webpack({\n    name: `Query Engine`,\n    // mode: `production`,\n    mode: `none`,\n    entry: path.join(__dirname, `entry.js`),\n    output: {\n      path: outputDir,\n      filename: `index.js`,\n      libraryTarget: `commonjs`,\n    },\n    target: `node`,\n    externalsPresets: {\n      node: false,\n    },\n    cache: {\n      type: `filesystem`,\n      name: `graphql-engine`,\n      cacheLocation,\n      buildDependencies: {\n        config: [__filename],\n      },\n    },\n    // those are required in some runtime paths, but we don't need them\n    externals: [\n      `cbor-x`, // optional dep of lmdb-store, but we are using `msgpack` (default) encoding, so we don't need it\n      `babel-runtime/helpers/asyncToGenerator`, // undeclared dep of yurnalist (but used in code path we don't use)\n      `electron`, // :shrug: `got` seems to have electron specific code path\n      mod.builtinModules.reduce((acc, builtinModule) => {\n        if (builtinModule === `fs`) {\n          acc[builtinModule] = `global _actualFsWrapper`\n        } else {\n          acc[builtinModule] = `commonjs ${builtinModule}`\n        }\n\n        return acc\n      }, {}),\n    ],\n    module: {\n      rules: [\n        {\n          oneOf: [\n            {\n              // specific set of loaders for LMBD - our custom patch to massage lmdb to work with relocator -> relocator\n              test: /node_modules[/\\\\]lmdb[/\\\\].*\\.[cm]?js/,\n              // it is recommended for Node builds to turn off AMD support\n              parser: { amd: false },\n              use: [\n                assetRelocatorUseEntry,\n                {\n                  loader: require.resolve(`./lmdb-bundling-patch`),\n                },\n              ],\n            },\n            {\n              // specific set of loaders for gatsby-node files - our babel transform that removes lifecycles not needed for engine -> relocator\n              test: /gatsby-node\\.([cm]?js)$/,\n              // it is recommended for Node builds to turn off AMD support\n              parser: { amd: false },\n              use: [\n                assetRelocatorUseEntry,\n                {\n                  loader: require.resolve(`./webpack-remove-apis-loader`),\n                },\n              ],\n            },\n            {\n              // generic loader for all other cases than lmdb or gatsby-node - we don't do anything special other than using relocator on it\n              // For node binary relocations, include \".node\" files as well here\n              test: /\\.([cm]?js|node)$/,\n              // it is recommended for Node builds to turn off AMD support\n              parser: { amd: false },\n              use: assetRelocatorUseEntry,\n            },\n          ],\n        },\n        {\n          test: /\\.m?js$/,\n          type: `javascript/auto`,\n          resolve: {\n            byDependency: {\n              esm: {\n                fullySpecified: false,\n              },\n            },\n          },\n        },\n        {\n          test: /\\.ts$/,\n          exclude: /node_modules/,\n          use: {\n            loader: `babel-loader`,\n            options: {\n              presets: [`@babel/preset-typescript`],\n            },\n          },\n        },\n        {\n          test: /\\.txt/,\n          type: `asset/resource`,\n        },\n      ],\n    },\n    resolve: {\n      extensions,\n      alias: {\n        \".cache\": process.cwd() + `/.cache/`,\n\n        [require.resolve(`gatsby-cli/lib/reporter/loggers/ink/index.js`)]:\n          false,\n        inquirer: false,\n        // only load one version of lmdb\n        lmdb: require.resolve(`lmdb`),\n      },\n    },\n    plugins: [\n      new webpack.DefinePlugin({\n        // \"process.env.GATSBY_LOGGER\": JSON.stringify(`yurnalist`),\n        \"process.env.GATSBY_EXPERIMENTAL_LMDB_STORE\": `true`,\n        \"process.env.GATSBY_SKIP_WRITING_SCHEMA_TO_FILE\": `true`,\n        SCHEMA_SNAPSHOT: JSON.stringify(schemaSnapshotString),\n        \"process.env.GATSBY_LOGGER\": JSON.stringify(`yurnalist`),\n      }),\n      process.env.GATSBY_WEBPACK_LOGGING?.includes(`query-engine`) &&\n        new WebpackLoggingPlugin(rootDir, reporter, isVerbose),\n    ].filter(Boolean) as Array<webpack.WebpackPluginInstance>,\n  })\n\n  return new Promise((resolve, reject) => {\n    compiler.run((err, stats) => {\n      compiler.close(closeErr => {\n        if (err) {\n          return reject(err)\n        }\n        if (closeErr) {\n          return reject(closeErr)\n        }\n        return resolve(stats?.compilation)\n      })\n    })\n  })\n}\n"],"mappings":"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"}