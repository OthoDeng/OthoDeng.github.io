{"version":3,"file":"print.js","names":["breakLine","line","maxLen","parts","split","RegExp","length","sublines","i","push","slice","descriptionLines","description","rawLines","_","flatMap","printBlock","items","join","printDeprecated","fieldOrEnumVal","reason","deprecationReason","reasonAST","astFromValue","GraphQLString","DEFAULT_DEPRECATION_REASON","print","printDescription","def","indentation","firstInBlock","isNamedTypeComposer","getDescription","lines","text","preferMultipleLines","blockString","printBlockString","prefix","replace","printDirectiveArgs","args","directive","directiveArgs","Object","entries","map","name","value","arg","find","type","printDirectives","extensions","directives","internalExtensionNames","includes","printInputValue","inputTC","argDecl","getTypeName","defaultValue","defaultAST","getType","printArgs","argsArray","every","_name","argTC","printFields","fields","printedFields","fieldName","fieldTC","String","printScalarType","tc","printObjectType","interfaces","getInterfaces","implementedInterfaces","getExtensions","getFields","hasInterface","dontInfer","omit","schemaComposer","getDirectives","printedDirectives","printInterfaceType","printUnionType","types","getTypeNames","possibleTypes","printEnumType","values","valueTC","printInputObjectType","printType","ObjectTypeComposer","InterfaceTypeComposer","UnionTypeComposer","EnumTypeComposer","ScalarTypeComposer","InputTypeComposer","printTypeDefinitions","config","Promise","resolve","path","include","exclude","withFieldTypes","rewrite","report","error","fs","existsSync","internalPlugins","typesToExclude","pluginsToExclude","plugins","getName","isInternalType","typeName","internalTypeNames","plugin","getExtension","shouldIncludeType","processedTypes","Set","typeDefs","addType","has","add","addWithFieldTypes","forEach","iface","ifaceName","getAnyTC","getFieldNames","fieldType","getFieldTC","fieldArgs","getFieldArgs","keys","argName","getFieldArgTC","printedTypeDefs","Date","toISOString","info","writeFile"],"sources":["../../src/schema/print.ts"],"sourcesContent":["import * as fs from \"fs-extra\"\nimport {\n  EnumTypeComposer,\n  InputTypeComposer,\n  InterfaceTypeComposer,\n  ObjectTypeComposer,\n  ScalarTypeComposer,\n  UnionTypeComposer,\n  SchemaComposer,\n  NamedTypeComposer,\n  ObjectTypeComposerFieldConfigMap,\n  ObjectTypeComposerFieldConfig,\n  ObjectTypeComposerArgumentConfigMap,\n  ObjectTypeComposerArgumentConfig,\n  Extensions,\n  isNamedTypeComposer,\n  EnumTypeComposerValueConfig,\n} from \"graphql-compose\"\nimport report from \"gatsby-cli/lib/reporter\"\nimport {\n  GraphQLDirective,\n  astFromValue,\n  print,\n  GraphQLString,\n  DEFAULT_DEPRECATION_REASON,\n} from \"graphql\"\nimport { printBlockString } from \"graphql/language/blockString\"\nimport { internalExtensionNames } from \"./extensions\"\nimport _ from \"lodash\"\nimport { internalTypeNames } from \"./types/built-in-types\"\n\nexport interface ISchemaPrintConfig {\n  path?: string\n  include?: {\n    types: Array<string>\n    plugins: Array<string>\n  }\n  exclude?: {\n    types: Array<string>\n    plugins: Array<string>\n  }\n  withFieldTypes?: boolean\n  rewrite?: boolean\n}\n\nconst breakLine = (line: string, maxLen: number): Array<string> => {\n  const parts = line.split(new RegExp(`((?: |^).{15,${maxLen - 40}}(?= |$))`))\n  if (parts.length < 4) {\n    return [line]\n  }\n  const sublines = [parts[0] + parts[1] + parts[2]]\n  for (let i = 3; i < parts.length; i += 2) {\n    sublines.push(parts[i].slice(1) + parts[i + 1])\n  }\n  return sublines\n}\n\nconst descriptionLines = (\n  description: string,\n  maxLen: number\n): Array<string> => {\n  const rawLines = description.split(`\\n`)\n  return _.flatMap(rawLines, line => {\n    if (line.length < maxLen + 5) {\n      return line\n    }\n    // For > 120 character long lines, cut at space boundaries into sublines\n    // of ~80 chars.\n    return breakLine(line, maxLen)\n  })\n}\n\nconst printBlock = (items: Array<string>): string =>\n  items.length !== 0 ? ` {\\n` + items.join(`\\n`) + `\\n}` : ``\n\nconst printDeprecated = (\n  fieldOrEnumVal:\n    | ObjectTypeComposerFieldConfig<unknown, unknown>\n    | EnumTypeComposerValueConfig\n): string => {\n  const reason = fieldOrEnumVal.deprecationReason\n  if (!reason) {\n    return ``\n  }\n  const reasonAST = astFromValue(reason, GraphQLString)\n  if (reasonAST && reason !== `` && reason !== DEFAULT_DEPRECATION_REASON) {\n    return ` @deprecated(reason: ` + print(reasonAST) + `)`\n  }\n  return ` @deprecated`\n}\n\nconst printDescription = (\n  def:\n    | ObjectTypeComposerFieldConfig<unknown, unknown>\n    | NamedTypeComposer<unknown>\n    | ObjectTypeComposerArgumentConfig\n    | EnumTypeComposerValueConfig,\n  indentation = ``,\n  firstInBlock = true\n): string => {\n  const description = isNamedTypeComposer(def)\n    ? def.getDescription()\n    : def.description\n  if (!description) {\n    return ``\n  }\n\n  const lines = descriptionLines(description, 120 - indentation.length)\n\n  const text = lines.join(`\\n`)\n  const preferMultipleLines = text.length > 70\n  const blockString = printBlockString(text, ``, preferMultipleLines)\n  const prefix = indentation && !firstInBlock ? `\\n` + indentation : indentation\n\n  return prefix + blockString.replace(/\\n/g, `\\n` + indentation) + `\\n`\n}\n\nconst printDirectiveArgs = (args: any, directive: GraphQLDirective): string => {\n  if (!args || !directive) {\n    return ``\n  }\n\n  const directiveArgs = Object.entries(args)\n  if (directiveArgs.length === 0) {\n    return ``\n  }\n\n  return (\n    `(` +\n    directiveArgs\n      .map(([name, value]) => {\n        const arg =\n          directive.args && directive.args.find(arg => arg.name === name)\n\n        return arg && `${name}: ${print(astFromValue(value, arg.type)!)}`\n      })\n      .join(`, `) +\n    `)`\n  )\n}\n\nexport const printDirectives = (\n  extensions: Extensions,\n  directives: Array<GraphQLDirective>\n): string =>\n  Object.entries(extensions)\n    .map(([name, args]) => {\n      if ([...internalExtensionNames, `deprecated`].includes(name)) return ``\n      return (\n        ` @${name}` +\n        printDirectiveArgs(\n          args,\n          directives.find(directive => directive.name === name)!\n        )\n      )\n    })\n    .join(``)\n\nconst printInputValue = ([name, inputTC]: [\n  string,\n  ObjectTypeComposerArgumentConfig\n]): string => {\n  let argDecl = name + `: ` + inputTC.type.getTypeName()\n  if (inputTC.defaultValue) {\n    const defaultAST = astFromValue(\n      inputTC.defaultValue,\n      inputTC.type.getType()\n    )\n    if (defaultAST) {\n      argDecl += ` = ${print(defaultAST)}`\n    }\n  }\n  return argDecl\n}\n\nconst printArgs = (\n  args: ObjectTypeComposerArgumentConfigMap | undefined,\n  indentation = ``\n): string => {\n  if (!args) {\n    return ``\n  }\n  const argsArray = Object.entries(args)\n  if (argsArray.length === 0) {\n    return ``\n  }\n\n  // If all args have no description, print them on one line\n  if (argsArray.every(([_name, argTC]) => !argTC.description)) {\n    return `(` + argsArray.map(printInputValue).join(`, `) + `)`\n  }\n\n  return (\n    `(\\n` +\n    argsArray\n      .map(\n        ([_name, argTC], i) =>\n          printDescription(argTC, `  ` + indentation, !i) +\n          `  ` +\n          indentation +\n          printInputValue([_name, argTC])\n      )\n      .join(`\\n`) +\n    `\\n` +\n    indentation +\n    `)`\n  )\n}\n\nconst printFields = (\n  fields: ObjectTypeComposerFieldConfigMap<unknown, unknown>,\n  directives: Array<GraphQLDirective>\n): string => {\n  const printedFields = Object.entries(fields).map(\n    ([fieldName, fieldTC], i) =>\n      printDescription(fieldTC, `  `, !i) +\n      `  ` +\n      fieldName +\n      printArgs(fieldTC.args, `  `) +\n      `: ` +\n      String(fieldTC.type.getTypeName()) +\n      printDirectives(fieldTC.extensions || {}, directives) +\n      printDeprecated(fieldTC)\n  )\n  return printBlock(printedFields)\n}\n\nconst printScalarType = (tc: ScalarTypeComposer): string =>\n  printDescription(tc) + `scalar ${tc.getTypeName()}`\n\nconst printObjectType = (tc: ObjectTypeComposer<unknown>): string => {\n  const interfaces = tc.getInterfaces()\n  const implementedInterfaces = interfaces.length\n    ? ` implements ` + interfaces.map(i => i.getTypeName()).join(` & `)\n    : ``\n  const extensions = tc.getExtensions()\n  let fields = tc.getFields()\n  if (tc.hasInterface(`Node`)) {\n    extensions.dontInfer = null\n    fields = _.omit(fields, [`id`, `parent`, `children`, `internal`])\n  }\n  const directives = tc.schemaComposer.getDirectives()\n  const printedDirectives = printDirectives(extensions, directives)\n\n  return (\n    printDescription(tc) +\n    `type ${tc.getTypeName()}${implementedInterfaces}${printedDirectives}` +\n    printFields(fields, directives)\n  )\n}\n\nconst printInterfaceType = (tc: InterfaceTypeComposer<unknown>): string => {\n  const interfaces = tc.getInterfaces()\n  const implementedInterfaces = interfaces.length\n    ? ` implements ` + interfaces.map(i => i.getTypeName()).join(` & `)\n    : ``\n  const extensions = tc.getExtensions()\n  const directives = tc.schemaComposer.getDirectives()\n  const printedDirectives = printDirectives(extensions, directives)\n  return (\n    printDescription(tc) +\n    `interface ${tc.getTypeName()}${implementedInterfaces}${printedDirectives}` +\n    printFields(tc.getFields(), directives)\n  )\n}\n\nconst printUnionType = (tc: UnionTypeComposer): string => {\n  const types = tc.getTypeNames()\n  const possibleTypes = types.length ? ` = ` + types.join(` | `) : ``\n  return printDescription(tc) + `union ` + tc.getTypeName() + possibleTypes\n}\n\nconst printEnumType = (tc: EnumTypeComposer): string => {\n  const values = Object.entries(tc.getFields()).map(\n    ([name, valueTC], i) =>\n      printDescription(valueTC, `  `, !i) +\n      `  ` +\n      name +\n      printDeprecated(valueTC)\n  )\n\n  return printDescription(tc) + `enum ${tc.getTypeName()}` + printBlock(values)\n}\n\nconst printInputObjectType = (tc: InputTypeComposer): string => {\n  const fields = Object.entries(tc.getFields()).map(\n    ([fieldName, fieldTC], i) =>\n      printDescription(fieldTC, `  `, !i) +\n      `  ` +\n      printInputValue([fieldName, fieldTC])\n  )\n\n  return printDescription(tc) + `input ${tc.getTypeName()}` + printBlock(fields)\n}\n\nconst printType = (tc: NamedTypeComposer<unknown>): string => {\n  if (tc instanceof ObjectTypeComposer) {\n    return printObjectType(tc)\n  } else if (tc instanceof InterfaceTypeComposer) {\n    return printInterfaceType(tc)\n  } else if (tc instanceof UnionTypeComposer) {\n    return printUnionType(tc)\n  } else if (tc instanceof EnumTypeComposer) {\n    return printEnumType(tc)\n  } else if (tc instanceof ScalarTypeComposer) {\n    return printScalarType(tc)\n  } else if (tc instanceof InputTypeComposer) {\n    return printInputObjectType(tc)\n  }\n\n  return ``\n}\n\nexport const printTypeDefinitions = ({\n  config,\n  schemaComposer,\n}: {\n  config: ISchemaPrintConfig\n  schemaComposer: SchemaComposer\n}): Promise<void> => {\n  if (!config) return Promise.resolve()\n\n  const {\n    path,\n    include,\n    exclude,\n    withFieldTypes,\n    rewrite = false,\n  } = config || {}\n\n  if (!path) {\n    report.error(\n      `Printing type definitions aborted. Please provide a file path.`\n    )\n    return Promise.resolve()\n  }\n\n  if (!rewrite && fs.existsSync(path)) {\n    report.error(\n      `Printing type definitions aborted. The file \\`${path}\\` already exists.`\n    )\n    return Promise.resolve()\n  }\n  const internalPlugins = [`internal-data-bridge`]\n\n  const typesToExclude = exclude?.types || []\n  const pluginsToExclude = exclude?.plugins || []\n\n  const getName = (tc: NamedTypeComposer<unknown>): string => tc.getTypeName()\n\n  const isInternalType = (tc: NamedTypeComposer<unknown>): boolean => {\n    const typeName = getName(tc)\n    if (internalTypeNames.includes(typeName)) {\n      return true\n    }\n\n    const plugin = tc.getExtension(`plugin`)\n    if (typeof plugin === `string` && internalPlugins.includes(plugin)) {\n      return true\n    }\n\n    return false\n  }\n\n  const shouldIncludeType = (tc: NamedTypeComposer<unknown>): boolean => {\n    const typeName = getName(tc)\n    if (typesToExclude.includes(typeName)) {\n      return false\n    }\n    if (include?.types && !include.types.includes(typeName)) {\n      return false\n    }\n\n    const plugin = tc.getExtension(`plugin`)\n    if (typeof plugin === `string` && pluginsToExclude.includes(plugin)) {\n      return false\n    }\n    if (\n      include?.plugins &&\n      (!plugin ||\n        (typeof plugin === `string` && !include.plugins.includes(plugin)))\n    ) {\n      return false\n    }\n\n    return true\n  }\n\n  // Save processed type names, not references to the type composers,\n  // because of how graphql-compose, at least in v6, processes\n  // inline types\n  const processedTypes = new Set<string>()\n  const typeDefs = new Set<NamedTypeComposer<unknown>>()\n\n  const addType = (\n    tc: NamedTypeComposer<unknown>\n  ): null | Set<NamedTypeComposer<unknown>> => {\n    const typeName = getName(tc)\n    if (!processedTypes.has(typeName) && !isInternalType(tc)) {\n      processedTypes.add(typeName)\n      return typeDefs.add(tc)\n    }\n    processedTypes.add(typeName)\n    return null\n  }\n\n  const addWithFieldTypes = (tc: NamedTypeComposer<unknown>): void => {\n    if (\n      addType(tc) &&\n      (tc instanceof ObjectTypeComposer ||\n        tc instanceof InterfaceTypeComposer ||\n        tc instanceof InputTypeComposer)\n    ) {\n      if (tc instanceof ObjectTypeComposer) {\n        const interfaces = tc.getInterfaces()\n        interfaces.forEach(iface => {\n          const ifaceName = iface.getTypeName()\n          if (ifaceName !== `Node`) {\n            addWithFieldTypes(schemaComposer.getAnyTC(ifaceName))\n          }\n        })\n      }\n\n      tc.getFieldNames().forEach(fieldName => {\n        const fieldType = tc.getFieldTC(fieldName)\n        addWithFieldTypes(fieldType)\n\n        if (!(tc instanceof InputTypeComposer)) {\n          const fieldArgs = tc.getFieldArgs(fieldName)\n          Object.keys(fieldArgs).forEach(argName => {\n            try {\n              addWithFieldTypes(tc.getFieldArgTC(fieldName, argName))\n            } catch {\n              // this type might not exist yet. If it won't be created by the end\n              // of schema creation then building schema will fail and fact that we\n              // skip it here won't matter\n            }\n          })\n        }\n      })\n    }\n  }\n\n  schemaComposer.forEach(tc => {\n    if (!isInternalType(tc) && shouldIncludeType(tc)) {\n      if (withFieldTypes) {\n        addWithFieldTypes(tc)\n      } else {\n        addType(tc)\n      }\n    }\n  })\n\n  const printedTypeDefs = [\n    `### Type definitions saved at ${new Date().toISOString()} ###`,\n  ]\n\n  try {\n    typeDefs.forEach(tc => printedTypeDefs.push(printType(tc)))\n    report.info(`Writing GraphQL type definitions to ${path}`)\n    return fs.writeFile(path, printedTypeDefs.join(`\\n\\n`))\n  } catch (error) {\n    report.error(`Failed writing type definitions to \\`${path}\\`.`, error)\n    return Promise.resolve()\n  }\n}\n"],"mappings":"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"}