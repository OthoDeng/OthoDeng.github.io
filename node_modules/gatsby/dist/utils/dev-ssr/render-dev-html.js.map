{"version":3,"file":"render-dev-html.js","names":["startWorker","newWorker","WorkerPool","require","resolve","numWorkers","env","NODE_ENV","isCI","forceColors","GATSBY_EXPERIMENTAL_DEV_SSR","worker","initDevWorkerPool","changeCount","restartWorker","htmlComponentRendererPath","oldWorker","end","all","deleteModuleCache","searchFileForString","substring","filePath","Promise","escapedSubString","replace","chunkRegex","RegExp","stream","fs","createReadStream","found","on","d","test","toString","close","ensurePathComponentInSSRBundle","page","directory","report","panic","nodePath","join","ROUTES_DIRECTORY","componentChunkName","readAttempts","searchForStringInterval","setInterval","clearInterval","renderDevHTML","path","skipSsr","store","error","undefined","reject","startListener","pageObj","findPageByPath","getState","isClientOnlyPage","matchPath","actions","createServerVisitedPage","dispatch","getPageDataExperimental","devssrWebpackCompiler","devssrWebpackWatcher","needToRecompileSSRBundle","getDevSSRWebpack","isResolved","finish","stats","emitter","off","resume","suspend","setTimeout","publicDir","htmlString","single","renderHTML","componentPath","component"],"sources":["../../../src/utils/dev-ssr/render-dev-html.ts"],"sourcesContent":["import { WorkerPool } from \"gatsby-worker\"\nimport fs from \"fs-extra\"\nimport nodePath from \"path\"\nimport report from \"gatsby-cli/lib/reporter\"\nimport { isCI } from \"gatsby-core-utils\"\nimport { Stats } from \"webpack\"\nimport { ROUTES_DIRECTORY } from \"../../constants\"\nimport { startListener } from \"../../bootstrap/requires-writer\"\nimport { findPageByPath } from \"../find-page-by-path\"\nimport { getPageData as getPageDataExperimental } from \"../get-page-data\"\nimport { getDevSSRWebpack } from \"../../commands/build-html\"\nimport { emitter, GatsbyReduxStore } from \"../../redux\"\nimport { IGatsbyPage } from \"../../redux/types\"\n\ninterface IErrorRenderMeta {\n  codeFrame: string\n  source: string\n  line: number\n  column: number\n  sourceMessage?: string\n  stack?: string\n}\n\n// TODO: convert `render-dev-html-child.js` to TS and use `typeof import(\"./render-dev-html-child\")`\n// instead of defining interface here\ninterface IRenderDevHtmlChild {\n  renderHTML: (arg: {\n    path: string\n    componentPath: string\n    htmlComponentRendererPath: string\n    publicDir: string\n    isClientOnlyPage?: boolean\n    error?: IErrorRenderMeta\n    directory?: string\n  }) => Promise<string>\n  deleteModuleCache: (htmlComponentRendererPath: string) => void\n}\n\nconst startWorker = (): WorkerPool<IRenderDevHtmlChild> => {\n  const newWorker = new WorkerPool<IRenderDevHtmlChild>(\n    require.resolve(`./render-dev-html-child`),\n    {\n      numWorkers: 1,\n      env: {\n        NODE_ENV: isCI() ? `production` : `development`,\n        forceColors: `true`,\n        GATSBY_EXPERIMENTAL_DEV_SSR: `true`,\n      },\n    }\n  )\n\n  return newWorker\n}\n\nlet worker: WorkerPool<IRenderDevHtmlChild>\nexport const initDevWorkerPool = (): void => {\n  worker = startWorker()\n}\n\nlet changeCount = 0\nexport const restartWorker = (htmlComponentRendererPath: string): void => {\n  changeCount += 1\n  // Forking is expensive — each time we re-require the outputted webpack\n  // file, memory grows ~10 mb — 25 regenerations means ~250mb which seems\n  // like an acceptable amount of memory to grow before we reclaim it\n  // by rebooting the worker process.\n  if (changeCount > 25) {\n    const oldWorker = worker\n    const newWorker = startWorker()\n    worker = newWorker\n    oldWorker.end()\n    changeCount = 0\n  } else {\n    worker.all.deleteModuleCache(htmlComponentRendererPath)\n  }\n}\n\nconst searchFileForString = (\n  substring: string,\n  filePath: string\n): Promise<boolean> =>\n  new Promise(resolve => {\n    const escapedSubString = substring.replace(/[.*+?^${}()|[\\]\\\\]/g, `\\\\$&`)\n\n    // See if the chunk is in the newComponents array (not the notVisited).\n    const chunkRegex = RegExp(\n      `exports.ssrComponents.*${escapedSubString}.*}`,\n      `gs`\n    )\n    const stream = fs.createReadStream(filePath)\n    let found = false\n    stream.on(`data`, function (d) {\n      if (chunkRegex.test(d.toString())) {\n        found = true\n        stream.close()\n        resolve(found)\n      }\n    })\n    stream.on(`error`, function () {\n      resolve(found)\n    })\n    stream.on(`close`, function () {\n      resolve(found)\n    })\n  })\n\nconst ensurePathComponentInSSRBundle = async (\n  page,\n  directory\n): Promise<boolean> => {\n  // This shouldn't happen.\n  if (!page) {\n    report.panic(`page not found`, page)\n  }\n\n  // Now check if it's written to the correct path\n  const htmlComponentRendererPath = nodePath.join(\n    directory,\n    ROUTES_DIRECTORY,\n    `render-page.js`\n  )\n\n  // This search takes 1-10ms\n  // We do it as there can be a race conditions where two pages\n  // are requested at the same time which means that both are told render-page.js\n  // has changed when the first page is complete meaning the second\n  // page's component won't be in the render meaning its SSR will fail.\n  let found = await searchFileForString(\n    page.componentChunkName,\n    htmlComponentRendererPath\n  )\n\n  if (!found) {\n    await new Promise<void>(resolve => {\n      let readAttempts = 0\n      const searchForStringInterval = setInterval(async () => {\n        readAttempts += 1\n        found = await searchFileForString(\n          page.componentChunkName,\n          htmlComponentRendererPath\n        )\n        if (found || readAttempts > 5) {\n          clearInterval(searchForStringInterval)\n          resolve()\n        }\n      }, 300)\n    })\n  }\n\n  return found\n}\n\ninterface IRenderDevHtmlProps {\n  path: string\n  page: IGatsbyPage\n  skipSsr?: boolean\n  store: GatsbyReduxStore\n  error?: IErrorRenderMeta\n  htmlComponentRendererPath: string\n  directory: string\n}\n\nexport const renderDevHTML = ({\n  path,\n  page,\n  skipSsr = false,\n  store,\n  error = undefined,\n  htmlComponentRendererPath,\n  directory,\n}: IRenderDevHtmlProps): Promise<string> =>\n  // eslint-disable-next-line no-async-promise-executor\n  new Promise(async (resolve, reject) => {\n    startListener()\n    let pageObj\n    if (!page) {\n      pageObj = findPageByPath(store.getState(), path)\n    } else {\n      pageObj = page\n    }\n\n    let isClientOnlyPage = false\n    if (pageObj.matchPath) {\n      isClientOnlyPage = true\n    }\n\n    const { actions } = require(`../../redux/actions`)\n    const { createServerVisitedPage } = actions\n    // Record this page was requested. This will kick off adding its page\n    // component to the ssr bundle (if that's not already happened)\n    store.dispatch(createServerVisitedPage(pageObj.componentChunkName))\n\n    // Ensure the query has been run and written out.\n    try {\n      await getPageDataExperimental(pageObj.path)\n    } catch {\n      // If we can't get the page, it was probably deleted recently\n      // so let's just do a 404 page.\n      return reject(`404 page`)\n    }\n\n    // Resume the webpack watcher and wait for any compilation necessary to happen.\n    // We timeout after 1.5s as the user might not care per se about SSR.\n    //\n    // We pause and resume so there's no excess webpack activity during normal development.\n    const {\n      devssrWebpackCompiler,\n      devssrWebpackWatcher,\n      needToRecompileSSRBundle,\n    } = getDevSSRWebpack()\n    if (\n      devssrWebpackWatcher &&\n      devssrWebpackCompiler &&\n      needToRecompileSSRBundle\n    ) {\n      let isResolved = false\n      await new Promise<Stats | void>(resolve => {\n        function finish(stats: Stats): void {\n          emitter.off(`DEV_SSR_COMPILATION_DONE`, finish)\n          if (!isResolved) {\n            resolve(stats)\n          }\n        }\n        emitter.on(`DEV_SSR_COMPILATION_DONE`, finish)\n        devssrWebpackWatcher.resume()\n        // Suspending is just a flag, so it's safe to re-suspend right away\n        devssrWebpackWatcher.suspend()\n\n        // Timeout after 1.5s.\n        setTimeout(() => {\n          isResolved = true\n          resolve()\n        }, 1500)\n      })\n    }\n\n    // Wait for html-renderer to update w/ the page component.\n    const found = await ensurePathComponentInSSRBundle(pageObj, directory)\n\n    // If we can't find the page, just force set isClientOnlyPage\n    // which skips rendering the body (so we just serve a shell)\n    // and the page will render normally on the client.\n    //\n    // This only happens on the first time we try to render a page component\n    // and it's taking a while to bundle its page component.\n    if (!found) {\n      isClientOnlyPage = true\n    }\n\n    // If the user added the query string `skip-ssr`, we always just render an empty shell.\n    if (skipSsr) {\n      isClientOnlyPage = true\n    }\n\n    const publicDir = nodePath.join(directory, `public`)\n\n    try {\n      const htmlString = await worker.single.renderHTML({\n        path,\n        componentPath: pageObj.component,\n        htmlComponentRendererPath,\n        directory,\n        publicDir,\n        isClientOnlyPage,\n        error,\n      })\n      return resolve(htmlString)\n    } catch (error) {\n      return reject(error)\n    }\n  })\n"],"mappings":"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"}