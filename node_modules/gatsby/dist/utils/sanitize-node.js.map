{"version":3,"file":"sanitize-node.js","names":["_","require","sanitizeNode","data","isNode","path","Set","isPlainObject","isArray","has","add","returnData","anyFieldChanged","each","o","key","omitUndefined","isTypeSupported","undefined","pickBy","p","filter","type","isSupported","Date","module","exports"],"sources":["../../src/utils/sanitize-node.js"],"sourcesContent":["const _ = require(`lodash`)\n\n/**\n * Make data serializable\n * @param {(Object|Array)} data to sanitize\n * @param {boolean} isNode = true\n * @param {Set<string>} path = new Set\n */\nconst sanitizeNode = (data, isNode = true, path = new Set()) => {\n  const isPlainObject = _.isPlainObject(data)\n\n  if (isPlainObject || _.isArray(data)) {\n    if (path.has(data)) return data\n    path.add(data)\n\n    const returnData = isPlainObject ? {} : []\n    let anyFieldChanged = false\n    _.each(data, (o, key) => {\n      if (isNode && key === `internal`) {\n        returnData[key] = o\n        return\n      }\n      returnData[key] = sanitizeNode(o, false, path)\n\n      if (returnData[key] !== o) {\n        anyFieldChanged = true\n      }\n    })\n\n    if (anyFieldChanged) {\n      data = omitUndefined(returnData)\n    }\n\n    // arrays and plain objects are supported - no need to to sanitize\n    return data\n  }\n\n  if (!isTypeSupported(data)) {\n    return undefined\n  } else {\n    return data\n  }\n}\n\n/**\n * @param {Object|Array} data\n * @returns {Object|Array} data without undefined values\n */\nconst omitUndefined = data => {\n  const isPlainObject = _.isPlainObject(data)\n  if (isPlainObject) {\n    return _.pickBy(data, p => p !== undefined)\n  }\n\n  return data.filter(p => p !== undefined)\n}\n\n/**\n * @param {*} data\n * @return {boolean}\n */\nconst isTypeSupported = data => {\n  if (data === null) {\n    return true\n  }\n\n  const type = typeof data\n  const isSupported =\n    type === `number` ||\n    type === `string` ||\n    type === `boolean` ||\n    data instanceof Date\n\n  return isSupported\n}\n\nmodule.exports = sanitizeNode\n"],"mappings":";;AAAA,MAAMA,CAAC,GAAGC,OAAO,CAAE,QAAF,CAAjB;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMC,YAAY,GAAG,CAACC,IAAD,EAAOC,MAAM,GAAG,IAAhB,EAAsBC,IAAI,GAAG,IAAIC,GAAJ,EAA7B,KAA2C;EAC9D,MAAMC,aAAa,GAAGP,CAAC,CAACO,aAAF,CAAgBJ,IAAhB,CAAtB;;EAEA,IAAII,aAAa,IAAIP,CAAC,CAACQ,OAAF,CAAUL,IAAV,CAArB,EAAsC;IACpC,IAAIE,IAAI,CAACI,GAAL,CAASN,IAAT,CAAJ,EAAoB,OAAOA,IAAP;IACpBE,IAAI,CAACK,GAAL,CAASP,IAAT;IAEA,MAAMQ,UAAU,GAAGJ,aAAa,GAAG,EAAH,GAAQ,EAAxC;IACA,IAAIK,eAAe,GAAG,KAAtB;;IACAZ,CAAC,CAACa,IAAF,CAAOV,IAAP,EAAa,CAACW,CAAD,EAAIC,GAAJ,KAAY;MACvB,IAAIX,MAAM,IAAIW,GAAG,KAAM,UAAvB,EAAkC;QAChCJ,UAAU,CAACI,GAAD,CAAV,GAAkBD,CAAlB;QACA;MACD;;MACDH,UAAU,CAACI,GAAD,CAAV,GAAkBb,YAAY,CAACY,CAAD,EAAI,KAAJ,EAAWT,IAAX,CAA9B;;MAEA,IAAIM,UAAU,CAACI,GAAD,CAAV,KAAoBD,CAAxB,EAA2B;QACzBF,eAAe,GAAG,IAAlB;MACD;IACF,CAVD;;IAYA,IAAIA,eAAJ,EAAqB;MACnBT,IAAI,GAAGa,aAAa,CAACL,UAAD,CAApB;IACD,CApBmC,CAsBpC;;;IACA,OAAOR,IAAP;EACD;;EAED,IAAI,CAACc,eAAe,CAACd,IAAD,CAApB,EAA4B;IAC1B,OAAOe,SAAP;EACD,CAFD,MAEO;IACL,OAAOf,IAAP;EACD;AACF,CAlCD;AAoCA;AACA;AACA;AACA;;;AACA,MAAMa,aAAa,GAAGb,IAAI,IAAI;EAC5B,MAAMI,aAAa,GAAGP,CAAC,CAACO,aAAF,CAAgBJ,IAAhB,CAAtB;;EACA,IAAII,aAAJ,EAAmB;IACjB,OAAOP,CAAC,CAACmB,MAAF,CAAShB,IAAT,EAAeiB,CAAC,IAAIA,CAAC,KAAKF,SAA1B,CAAP;EACD;;EAED,OAAOf,IAAI,CAACkB,MAAL,CAAYD,CAAC,IAAIA,CAAC,KAAKF,SAAvB,CAAP;AACD,CAPD;AASA;AACA;AACA;AACA;;;AACA,MAAMD,eAAe,GAAGd,IAAI,IAAI;EAC9B,IAAIA,IAAI,KAAK,IAAb,EAAmB;IACjB,OAAO,IAAP;EACD;;EAED,MAAMmB,IAAI,GAAG,OAAOnB,IAApB;EACA,MAAMoB,WAAW,GACfD,IAAI,KAAM,QAAV,IACAA,IAAI,KAAM,QADV,IAEAA,IAAI,KAAM,SAFV,IAGAnB,IAAI,YAAYqB,IAJlB;EAMA,OAAOD,WAAP;AACD,CAbD;;AAeAE,MAAM,CAACC,OAAP,GAAiBxB,YAAjB"}