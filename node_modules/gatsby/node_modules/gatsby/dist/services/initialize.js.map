{"version":3,"sources":["../../src/services/initialize.ts"],"names":["process","env","gatsby_executing_command","GATSBY_EXPERIMENTAL_FAST_DEV","GATSBY_EXPERIMENTAL_DEV_SSR","PRESERVE_FILE_DOWNLOAD_CACHE","PRESERVE_WEBPACK_CACHE","reporter","info","telemetry","trackFeatureIsUsed","on","reason","panic","initialize","program","args","parentSpan","GATSBY_DISABLE_CACHE_PERSISTENCE","setStore","store","directory","browserslist","dispatch","type","payload","activityForJobs","emitter","phantomActivity","start","onEndJob","getState","jobs","active","length","end","activity","activityTimer","configModule","configFilePath","config","id","context","configName","path","flags","FAST_REFRESH","GATSBY_HOT_LOADER","warn","stripIndent","enabledConfigFlags","unknownFlagMessage","message","availableFlags","forEach","flag","telemetryId","GATSBY_EXPERIMENTAL_QUERY_ON_DEMAND","GATSBY_QUERY_ON_DEMAND_LOADING_INDICATOR","__experimentalThemes","themes","useLegacyThemes","rootDir","plugins","polyfill","internalActions","setSiteConfig","verbose","flattenedPlugins","pluginsStr","_","uniq","map","p","name","version","decorateEvent","span","GATSBY_EXPERIMENTAL_PAGE_BUILD_ON_DATA_CHANGES","NODE_ENV","pluginVersions","hashes","Promise","all","catch","pluginsHash","crypto","createHash","update","JSON","stringify","concat","digest","state","oldPluginsHash","status","PLUGINS_HASH","cacheDirectory","publicDirectory","cacheIsCorrupt","fs","existsSync","GATSBY_EXPERIMENTAL_PRESERVE_FILE_DOWNLOAD_CACHE","GATSBY_EXPERIMENTAL_PRESERVE_WEBPACK_CACHE","deleteGlobs","push","remove","emptyDir","e","error","pluginCachesPurged","ensureDir","srcDir","__dirname","siteDir","tryRequire","copy","ensureDirSync","err","hasAPIFile","plugin","skipSSR","undefined","envAPIs","require","resolve","join","Array","isArray","isResolved","ssrPlugins","options","pluginOptions","filter","browserPlugins","browserPluginsRequires","relativePluginPath","relative","browserAPIRunner","sSRAPIRunner","readFileSync","ssrPluginsRequires","writeFileSync","extensions","apiResults","traceId","flattenDeep","workerPool","WorkerPool","create"],"mappings":"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","sourcesContent":["import _ from \"lodash\"\nimport { slash, isCI } from \"gatsby-core-utils\"\nimport fs from \"fs-extra\"\nimport md5File from \"md5-file\"\nimport crypto from \"crypto\"\nimport del from \"del\"\nimport path from \"path\"\nimport telemetry from \"gatsby-telemetry\"\n\nimport apiRunnerNode from \"../utils/api-runner-node\"\nimport handleFlags from \"../utils/handle-flags\"\nimport { getBrowsersList } from \"../utils/browserslist\"\nimport { Store, AnyAction } from \"redux\"\nimport { preferDefault } from \"../bootstrap/prefer-default\"\nimport * as WorkerPool from \"../utils/worker/pool\"\nimport JestWorker from \"jest-worker\"\nimport { startPluginRunner } from \"../redux/plugin-runner\"\nimport { loadPlugins } from \"../bootstrap/load-plugins\"\nimport { store, emitter } from \"../redux\"\nimport loadThemes from \"../bootstrap/load-themes\"\nimport reporter from \"gatsby-cli/lib/reporter\"\nimport { getReactHotLoaderStrategy } from \"../utils/get-react-hot-loader-strategy\"\nimport { getConfigFile } from \"../bootstrap/get-config-file\"\nimport { removeStaleJobs } from \"../bootstrap/remove-stale-jobs\"\nimport { IPluginInfoOptions } from \"../bootstrap/load-plugins/types\"\nimport { internalActions } from \"../redux/actions\"\nimport { IGatsbyState } from \"../redux/types\"\nimport { IBuildContext } from \"./types\"\nimport availableFlags from \"../utils/flags\"\n\ninterface IPluginResolution {\n  resolve: string\n  options: IPluginInfoOptions\n}\n\n// If the env variable GATSBY_EXPERIMENTAL_FAST_DEV is set, enable\n// all DEV experimental changes (but only during development & not on CI).\nif (\n  process.env.gatsby_executing_command === `develop` &&\n  process.env.GATSBY_EXPERIMENTAL_FAST_DEV &&\n  !isCI()\n) {\n  process.env.GATSBY_EXPERIMENTAL_DEV_SSR = `true`\n  process.env.PRESERVE_FILE_DOWNLOAD_CACHE = `true`\n  process.env.PRESERVE_WEBPACK_CACHE = `true`\n\n  reporter.info(`\nThree fast dev experiments are enabled: Development SSR, preserving file download cache and preserving webpack cache.\n\nPlease give feedback on their respective umbrella issues!\n\n- https://gatsby.dev/dev-ssr-feedback\n- https://gatsby.dev/cache-clearing-feedback\n  `)\n\n  telemetry.trackFeatureIsUsed(`FastDev`)\n}\n\n// Show stack trace on unhandled promises.\nprocess.on(`unhandledRejection`, (reason: unknown) => {\n  // https://github.com/DefinitelyTyped/DefinitelyTyped/issues/33636\n  reporter.panic((reason as Error) || `Unhandled rejection`)\n})\n\n// Override console.log to add the source file + line number.\n// Useful for debugging if you lose a console.log somewhere.\n// Otherwise leave commented out.\n// require(`../bootstrap/log-line-function`)\n\nexport async function initialize({\n  program: args,\n  parentSpan,\n}: IBuildContext): Promise<{\n  store: Store<IGatsbyState, AnyAction>\n  workerPool: JestWorker\n}> {\n  if (process.env.GATSBY_DISABLE_CACHE_PERSISTENCE) {\n    reporter.info(\n      `GATSBY_DISABLE_CACHE_PERSISTENCE is enabled. Cache won't be persisted. Next builds will not be able to reuse any work done by current session.`\n    )\n    telemetry.trackFeatureIsUsed(`DisableCachePersistence`)\n  }\n  if (!args) {\n    reporter.panic(`Missing program args`)\n  }\n\n  /* Time for a little story...\n   * When running `gatsby develop`, the globally installed gatsby-cli starts\n   * and sets up a Redux store (which is where logs are now stored). When gatsby\n   * finds your project's locally installed gatsby-cli package in node_modules,\n   * it switches over. This instance will have a separate redux store. We need to\n   * ensure that the correct store is used which is why we call setStore\n   * (/packages/gatsby-cli/src/reporter/redux/index.js)\n   *\n   * This function\n   * - copies over the logs from the global gatsby-cli to the local one\n   * - sets the store to the local one (so that further actions dispatched by\n   * the global gatsby-cli are handled by the local one)\n   */\n  if (args.setStore) {\n    args.setStore(store)\n  }\n\n  // Start plugin runner which listens to the store\n  // and invokes Gatsby API based on actions.\n  startPluginRunner()\n\n  const directory = slash(args.directory)\n\n  const program = {\n    ...args,\n    browserslist: getBrowsersList(directory),\n    // Fix program directory path for windows env.\n    directory,\n  }\n\n  store.dispatch({\n    type: `SET_PROGRAM`,\n    payload: program,\n  })\n\n  let activityForJobs\n\n  emitter.on(`CREATE_JOB`, () => {\n    if (!activityForJobs) {\n      activityForJobs = reporter.phantomActivity(`Running jobs`)\n      activityForJobs.start()\n    }\n  })\n\n  const onEndJob = (): void => {\n    if (activityForJobs && store.getState().jobs.active.length === 0) {\n      activityForJobs.end()\n      activityForJobs = null\n    }\n  }\n\n  emitter.on(`END_JOB`, onEndJob)\n\n  // Try opening the site's gatsby-config.js file.\n  let activity = reporter.activityTimer(`open and validate gatsby-configs`, {\n    parentSpan,\n  })\n  activity.start()\n  const { configModule, configFilePath } = await getConfigFile(\n    program.directory,\n    `gatsby-config`\n  )\n  let config = preferDefault(configModule)\n\n  // The root config cannot be exported as a function, only theme configs\n  if (typeof config === `function`) {\n    reporter.panic({\n      id: `10126`,\n      context: {\n        configName: `gatsby-config`,\n        path: program.directory,\n      },\n    })\n  }\n\n  // Setup flags\n  if (config) {\n    // TODO: this should be handled in FAST_REFRESH configuration and not be one-off here.\n    if (\n      config.flags?.FAST_REFRESH &&\n      process.env.GATSBY_HOT_LOADER &&\n      process.env.GATSBY_HOT_LOADER !== `fast-refresh`\n    ) {\n      delete config.flags.FAST_REFRESH\n      reporter.warn(\n        reporter.stripIndent(`\n          Both FAST_REFRESH gatsby-config flag and GATSBY_HOT_LOADER environment variable is used with conflicting setting (\"${process.env.GATSBY_HOT_LOADER}\").\n\n          Will use react-hot-loader.\n\n          To use Fast Refresh either do not use GATSBY_HOT_LOADER environment variable or set it to \"fast-refresh\".\n        `)\n      )\n    }\n\n    // Get flags\n    const { enabledConfigFlags, unknownFlagMessage, message } = handleFlags(\n      availableFlags,\n      config.flags\n    )\n\n    if (unknownFlagMessage !== ``) {\n      reporter.warn(unknownFlagMessage)\n    }\n\n    //  set process.env for each flag\n    enabledConfigFlags.forEach(flag => {\n      process.env[flag.env] = `true`\n    })\n\n    // Print out message.\n    if (message !== ``) {\n      reporter.info(message)\n    }\n\n    //  track usage of feature\n    enabledConfigFlags.forEach(flag => {\n      if (flag.telemetryId) {\n        telemetry.trackFeatureIsUsed(flag.telemetryId)\n      }\n    })\n\n    // Track the usage of config.flags\n    if (config.flags) {\n      telemetry.trackFeatureIsUsed(`ConfigFlags`)\n    }\n  }\n\n  process.env.GATSBY_HOT_LOADER = getReactHotLoaderStrategy()\n\n  // TODO: figure out proper way of disabling loading indicator\n  // for now GATSBY_QUERY_ON_DEMAND_LOADING_INDICATOR=false gatsby develop\n  // will work, but we don't want to force users into using env vars\n  if (\n    process.env.GATSBY_EXPERIMENTAL_QUERY_ON_DEMAND &&\n    !process.env.GATSBY_QUERY_ON_DEMAND_LOADING_INDICATOR\n  ) {\n    // if query on demand is enabled and GATSBY_QUERY_ON_DEMAND_LOADING_INDICATOR was not set at all\n    // enable loading indicator\n    process.env.GATSBY_QUERY_ON_DEMAND_LOADING_INDICATOR = `true`\n  }\n\n  // theme gatsby configs can be functions or objects\n  if (config && config.__experimentalThemes) {\n    reporter.warn(\n      `The gatsby-config key \"__experimentalThemes\" has been deprecated. Please use the \"plugins\" key instead.`\n    )\n    const themes = await loadThemes(config, {\n      useLegacyThemes: true,\n      configFilePath,\n      rootDir: program.directory,\n    })\n    config = themes.config\n\n    store.dispatch({\n      type: `SET_RESOLVED_THEMES`,\n      payload: themes.themes,\n    })\n  } else if (config) {\n    const plugins = await loadThemes(config, {\n      useLegacyThemes: false,\n      configFilePath,\n      rootDir: program.directory,\n    })\n    config = plugins.config\n  }\n\n  if (config && config.polyfill) {\n    reporter.warn(\n      `Support for custom Promise polyfills has been removed in Gatsby v2. We only support Babel 7's new automatic polyfilling behavior.`\n    )\n  }\n\n  store.dispatch(internalActions.setSiteConfig(config))\n\n  activity.end()\n\n  if (process.env.GATSBY_EXPERIMENTAL_QUERY_ON_DEMAND) {\n    if (process.env.gatsby_executing_command !== `develop`) {\n      // we don't want to ever have this flag enabled for anything than develop\n      // in case someone have this env var globally set\n      delete process.env.GATSBY_EXPERIMENTAL_QUERY_ON_DEMAND\n    } else if (isCI()) {\n      delete process.env.GATSBY_EXPERIMENTAL_QUERY_ON_DEMAND\n      reporter.verbose(\n        `Experimental Query on Demand feature is not available in CI environment. Continuing with eager query running.`\n      )\n    }\n  }\n\n  // run stale jobs\n  store.dispatch(removeStaleJobs(store.getState()))\n\n  activity = reporter.activityTimer(`load plugins`, {\n    parentSpan,\n  })\n  activity.start()\n  const flattenedPlugins = await loadPlugins(config, program.directory)\n  activity.end()\n\n  // Multiple occurrences of the same name-version-pair can occur,\n  // so we report an array of unique pairs\n  const pluginsStr = _.uniq(flattenedPlugins.map(p => `${p.name}@${p.version}`))\n  telemetry.decorateEvent(`BUILD_END`, {\n    plugins: pluginsStr,\n  })\n\n  telemetry.decorateEvent(`DEVELOP_STOP`, {\n    plugins: pluginsStr,\n  })\n\n  // onPreInit\n  activity = reporter.activityTimer(`onPreInit`, {\n    parentSpan,\n  })\n  activity.start()\n  await apiRunnerNode(`onPreInit`, { parentSpan: activity.span })\n  activity.end()\n\n  // During builds, delete html and css files from the public directory as we don't want\n  // deleted pages and styles from previous builds to stick around.\n  if (\n    !process.env.GATSBY_EXPERIMENTAL_PAGE_BUILD_ON_DATA_CHANGES &&\n    process.env.NODE_ENV === `production`\n  ) {\n    activity = reporter.activityTimer(\n      `delete html and css files from previous builds`,\n      {\n        parentSpan,\n      }\n    )\n    activity.start()\n    await del([\n      `public/**/*.{html,css}`,\n      `!public/page-data/**/*`,\n      `!public/static`,\n      `!public/static/**/*.{html,css}`,\n    ])\n    activity.end()\n  }\n\n  activity = reporter.activityTimer(`initialize cache`, {\n    parentSpan,\n  })\n  activity.start()\n  // Check if any plugins have been updated since our last run. If so\n  // we delete the cache is there's likely been changes\n  // since the previous run.\n  //\n  // We do this by creating a hash of all the version numbers of installed\n  // plugins, the site's package.json, gatsby-config.js, and gatsby-node.js.\n  // The last, gatsby-node.js, is important as many gatsby sites put important\n  // logic in there e.g. generating slugs for custom pages.\n  const pluginVersions = flattenedPlugins.map(p => p.version)\n  const hashes: any = await Promise.all([\n    !!process.env.GATSBY_EXPERIMENTAL_PAGE_BUILD_ON_DATA_CHANGES,\n    md5File(`package.json`),\n    md5File(`${program.directory}/gatsby-config.js`).catch(() => {}), // ignore as this file isn't required),\n    md5File(`${program.directory}/gatsby-node.js`).catch(() => {}), // ignore as this file isn't required),\n  ])\n  const pluginsHash = crypto\n    .createHash(`md5`)\n    .update(JSON.stringify(pluginVersions.concat(hashes)))\n    .digest(`hex`)\n  const state = store.getState()\n  const oldPluginsHash = state && state.status ? state.status.PLUGINS_HASH : ``\n\n  // Check if anything has changed. If it has, delete the site's .cache\n  // directory and tell reducers to empty themselves.\n  //\n  // Also if the hash isn't there, then delete things just in case something\n  // is weird.\n  if (oldPluginsHash && pluginsHash !== oldPluginsHash) {\n    reporter.info(reporter.stripIndent`\n      One or more of your plugins have changed since the last time you ran Gatsby. As\n      a precaution, we're deleting your site's cache to ensure there's no stale data.\n    `)\n  }\n  const cacheDirectory = `${program.directory}/.cache`\n  const publicDirectory = `${program.directory}/public`\n\n  // .cache directory exists in develop at this point\n  // so checking for .cache/json as a heuristic (could be any expected file)\n  const cacheIsCorrupt =\n    fs.existsSync(`${cacheDirectory}/json`) && !fs.existsSync(publicDirectory)\n\n  if (cacheIsCorrupt) {\n    reporter.info(reporter.stripIndent`\n      We've detected that the Gatsby cache is incomplete (the .cache directory exists\n      but the public directory does not). As a precaution, we're deleting your site's\n      cache to ensure there's no stale data.\n    `)\n  }\n\n  if (!oldPluginsHash || pluginsHash !== oldPluginsHash || cacheIsCorrupt) {\n    try {\n      // Comment out inviet until we can test perf impact\n      //\n      // let sourceFileSystemVersion = flattenedPlugins.find(\n      // plugin => plugin.name === `gatsby-source-filesystem`\n      // )?.version\n\n      // // The site might be using a plugin which uses \"createRemoteFileNode\" but\n      // // doesn't have gatsby-source-filesystem in their gatsby-config.js. So lets\n      // // also try requiring it.\n      // if (!sourceFileSystemVersion) {\n      // try {\n      // sourceFileSystemVersion = require(`gatsby-source-filesystem/package.json`)\n      // ?.version\n      // } catch {\n      // // ignore require errors\n      // }\n      // }\n      // } else if (\n      // sourceFileSystemVersion &&\n      // semver.lt(sourceFileSystemVersion, `2.9.0`)\n      // ) {\n      // // If the site has more than 50 downloaded files in it, tell them\n      // // how to save time.\n      // try {\n      // // Divide by two as the directory as both cache files + the actual downloaded files so\n      // // two results / downloaded file.\n      // const filesCount =\n      // (await fs.readdir(`.cache/caches/gatsby-source-filesystem`))\n      // .length / 2\n      // if (filesCount > 50) {\n      // reporter.info(stripIndent`\\n\\n\n\n      // Your local development experience is about to get better, faster, and stronger!\n\n      // Your friendly Gatsby maintainers detected your site downloads quite a few files and that we're about to delete all ${Math.round(\n      // filesCount\n      // )} of them 😅. We're working right now to make our caching smarter which means we won't delete your downloaded files any more.\n\n      // If you're interested in trialing the new caching behavior *today* — which should make your local development environment faster, go ahead and enable the PRESERVE_FILE_DOWNLOAD_CACHE flag and run your develop server again.\n\n      // To do so, add to your gatsby-config.js:\n\n      // flags: {\n      // preserve_file_download_cache: true,\n      // }\n\n      // visit the umbrella issue to learn more: https://github.com/gatsbyjs/gatsby/discussions/28331\n      // `)\n      // }\n      // } catch {\n      // // ignore errors (mostly will just be directory not found).\n      // }\n      // }\n\n      if (\n        process.env.GATSBY_EXPERIMENTAL_PRESERVE_FILE_DOWNLOAD_CACHE ||\n        process.env.GATSBY_EXPERIMENTAL_PRESERVE_WEBPACK_CACHE\n      ) {\n        const deleteGlobs = [\n          // By default delete all files & subdirectories\n          `${cacheDirectory}/**`,\n          `${cacheDirectory}/*/`,\n        ]\n\n        if (process.env.GATSBY_EXPERIMENTAL_PRESERVE_FILE_DOWNLOAD_CACHE) {\n          // Add gatsby-source-filesystem\n          deleteGlobs.push(`!${cacheDirectory}/caches/gatsby-source-filesystem`)\n        }\n\n        if (process.env.GATSBY_EXPERIMENTAL_PRESERVE_WEBPACK_CACHE) {\n          // Add webpack\n          deleteGlobs.push(`!${cacheDirectory}/webpack`)\n        }\n        await del(deleteGlobs)\n      } else {\n        // Attempt to empty dir if remove fails,\n        // like when directory is mount point\n        await fs.remove(cacheDirectory).catch(() => fs.emptyDir(cacheDirectory))\n      }\n    } catch (e) {\n      reporter.error(`Failed to remove .cache files.`, e)\n    }\n    // Tell reducers to delete their data (the store will already have\n    // been loaded from the file system cache).\n    store.dispatch({\n      type: `DELETE_CACHE`,\n      cacheIsCorrupt,\n    })\n\n    // in future this should show which plugin's caches are purged\n    // possibly should also have which plugins had caches\n    telemetry.decorateEvent(`BUILD_END`, {\n      pluginCachesPurged: [`*`],\n    })\n    telemetry.decorateEvent(`DEVELOP_STOP`, {\n      pluginCachesPurged: [`*`],\n    })\n  }\n\n  // Update the store with the new plugins hash.\n  store.dispatch({\n    type: `UPDATE_PLUGINS_HASH`,\n    payload: pluginsHash,\n  })\n\n  // Now that we know the .cache directory is safe, initialize the cache\n  // directory.\n  await fs.ensureDir(cacheDirectory)\n\n  // Ensure the public/static directory\n  await fs.ensureDir(`${publicDirectory}/static`)\n\n  activity.end()\n\n  activity = reporter.activityTimer(`copy gatsby files`, {\n    parentSpan,\n  })\n  activity.start()\n  const srcDir = `${__dirname}/../../cache-dir`\n  const siteDir = cacheDirectory\n  const tryRequire = `${__dirname}/../utils/test-require-error.js`\n  try {\n    await fs.copy(srcDir, siteDir)\n    await fs.copy(tryRequire, `${siteDir}/test-require-error.js`)\n    await fs.ensureDirSync(`${cacheDirectory}/json`)\n\n    // Ensure .cache/fragments exists and is empty. We want fragments to be\n    // added on every run in response to data as fragments can only be added if\n    // the data used to create the schema they're dependent on is available.\n    await fs.emptyDir(`${cacheDirectory}/fragments`)\n  } catch (err) {\n    reporter.panic(`Unable to copy site files to .cache`, err)\n  }\n\n  // Find plugins which implement gatsby-browser and gatsby-ssr and write\n  // out api-runners for them.\n  const hasAPIFile = (env, plugin): string | undefined => {\n    // The plugin loader has disabled SSR APIs for this plugin. Usually due to\n    // multiple implementations of an API that can only be implemented once\n    if (env === `ssr` && plugin.skipSSR === true) return undefined\n\n    const envAPIs = plugin[`${env}APIs`]\n\n    // Always include gatsby-browser.js files if they exist as they're\n    // a handy place to include global styles and other global imports.\n    try {\n      if (env === `browser`) {\n        return slash(\n          require.resolve(path.join(plugin.resolve, `gatsby-${env}`))\n        )\n      }\n    } catch (e) {\n      // ignore\n    }\n\n    if (envAPIs && Array.isArray(envAPIs) && envAPIs.length > 0) {\n      return slash(path.join(plugin.resolve, `gatsby-${env}`))\n    }\n    return undefined\n  }\n\n  const isResolved = (plugin): plugin is IPluginResolution => !!plugin.resolve\n\n  const ssrPlugins: Array<IPluginResolution> = flattenedPlugins\n    .map(plugin => {\n      return {\n        resolve: hasAPIFile(`ssr`, plugin),\n        options: plugin.pluginOptions,\n      }\n    })\n    .filter(isResolved)\n\n  const browserPlugins: Array<IPluginResolution> = flattenedPlugins\n    .map(plugin => {\n      return {\n        resolve: hasAPIFile(`browser`, plugin),\n        options: plugin.pluginOptions,\n      }\n    })\n    .filter(isResolved)\n\n  const browserPluginsRequires = browserPlugins\n    .map(plugin => {\n      // we need a relative import path to keep contenthash the same if directory changes\n      const relativePluginPath = path.relative(siteDir, plugin.resolve)\n      return `{\n      plugin: require('${slash(relativePluginPath)}'),\n      options: ${JSON.stringify(plugin.options)},\n    }`\n    })\n    .join(`,`)\n\n  const browserAPIRunner = `module.exports = [${browserPluginsRequires}]\\n`\n\n  let sSRAPIRunner = ``\n\n  try {\n    sSRAPIRunner = fs.readFileSync(`${siteDir}/api-runner-ssr.js`, `utf-8`)\n  } catch (err) {\n    reporter.panic(`Failed to read ${siteDir}/api-runner-ssr.js`, err)\n  }\n\n  const ssrPluginsRequires = ssrPlugins\n    .map(\n      plugin =>\n        `{\n      plugin: require('${plugin.resolve}'),\n      options: ${JSON.stringify(plugin.options)},\n    }`\n    )\n    .join(`,`)\n  sSRAPIRunner = `var plugins = [${ssrPluginsRequires}]\\n${sSRAPIRunner}`\n\n  fs.writeFileSync(\n    `${siteDir}/api-runner-browser-plugins.js`,\n    browserAPIRunner,\n    `utf-8`\n  )\n  fs.writeFileSync(`${siteDir}/api-runner-ssr.js`, sSRAPIRunner, `utf-8`)\n\n  activity.end()\n  /**\n   * Start the main bootstrap processes.\n   */\n\n  // onPreBootstrap\n  activity = reporter.activityTimer(`onPreBootstrap`, {\n    parentSpan,\n  })\n  activity.start()\n  await apiRunnerNode(`onPreBootstrap`, {\n    parentSpan: activity.span,\n  })\n  activity.end()\n\n  // Collect resolvable extensions and attach to program.\n  const extensions = [`.mjs`, `.js`, `.jsx`, `.wasm`, `.json`]\n  // Change to this being an action and plugins implement `onPreBootstrap`\n  // for adding extensions.\n  const apiResults = await apiRunnerNode(`resolvableExtensions`, {\n    traceId: `initial-resolvableExtensions`,\n    parentSpan,\n  })\n\n  store.dispatch({\n    type: `SET_PROGRAM_EXTENSIONS`,\n    payload: _.flattenDeep([extensions, apiResults]),\n  })\n\n  const workerPool = WorkerPool.create()\n\n  return {\n    store,\n    workerPool,\n  }\n}\n"],"file":"initialize.js"}