{"version":3,"sources":["../../src/commands/build.ts"],"names":["cachedPageData","cachedWebpackCompilationHash","process","env","GATSBY_EXPERIMENTAL_PAGE_BUILD_ON_DATA_CHANGES","pageData","webpackCompilationHash","module","exports","build","program","VERBOSE","verbose","report","setVerbose","profile","warn","name","sitePackageJson","sitePath","directory","lastRun","Date","now","pid","publicDir","path","join","openTracingConfigFile","buildActivity","phantomActivity","start","telemetry","trackCli","exitCode","buildSpan","span","setTag","gatsbyNodeGraphQLFunction","parentSpan","graphqlRunner","GraphQLRunner","store","collectStats","graphqlTracing","queryIds","graphql","buildActivityTimer","activityTimer","stats","err","panic","Stage","BuildJavascript","end","workerPool","WorkerPool","create","hash","getState","appDataUtil","exists","dispatch","type","payload","rewriteActivityTimer","write","pages","forEach","_value","key","has","boundActionCreators","removePageData","id","isTrackingEnabled","bundleSizes","toJson","assets","filter","asset","endsWith","map","size","pageDataSizes","pageDataStats","values","addSiteMeasurement","bundleStats","aggregateStats","queryStats","getStats","setProgramStatus","db","saveState","pagePaths","keys","buildUtils","getChangedPageDataKeys","info","stripIndent","buildSSRBundleActivityProgress","pageRenderer","BuildHTML","pagesCount","length","totalPagesCount","buildHTMLActivityProgress","createProgress","context","errorPath","ref","match","message","error","keepPageRenderer","deletedPageKeys","deletePageDataActivityTimer","collectRemovedPageData","removePageFiles","postBuildActivityTimer","uptime","finish","argv","includes","createdFilesPath","resolve","createdFilesContent","deletedFilesPath","deletedFilesContent","fs","writeFile"],"mappings":"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","sourcesContent":["import path from \"path\"\nimport report from \"gatsby-cli/lib/reporter\"\nimport signalExit from \"signal-exit\"\nimport fs from \"fs-extra\"\nimport telemetry from \"gatsby-telemetry\"\n\nimport { doBuildPages, buildRenderer, deleteRenderer } from \"./build-html\"\nimport { buildProductionBundle } from \"./build-javascript\"\nimport { bootstrap } from \"../bootstrap\"\nimport apiRunnerNode from \"../utils/api-runner-node\"\nimport { GraphQLRunner } from \"../query/graphql-runner\"\nimport { copyStaticDirs } from \"../utils/get-static-dir\"\nimport { initTracer, stopTracer } from \"../utils/tracer\"\nimport db from \"../db\"\nimport { store, readState } from \"../redux\"\nimport * as appDataUtil from \"../utils/app-data\"\nimport { flush as flushPendingPageDataWrites } from \"../utils/page-data\"\nimport * as WorkerPool from \"../utils/worker/pool\"\nimport { structureWebpackErrors } from \"../utils/webpack-error-utils\"\nimport {\n  userGetsSevenDayFeedback,\n  userPassesFeedbackRequestHeuristic,\n  showFeedbackRequest,\n  showSevenDayFeedbackRequest,\n} from \"../utils/feedback\"\nimport * as buildUtils from \"./build-utils\"\nimport { boundActionCreators } from \"../redux/actions\"\nimport { waitUntilAllJobsComplete } from \"../utils/wait-until-jobs-complete\"\nimport { IProgram, Stage } from \"./types\"\nimport { PackageJson } from \"../..\"\nimport {\n  calculateDirtyQueries,\n  runStaticQueries,\n  runPageQueries,\n  writeOutRequires,\n} from \"../services\"\nimport {\n  markWebpackStatusAsPending,\n  markWebpackStatusAsDone,\n} from \"../utils/webpack-status\"\nimport { updateSiteMetadata, isTruthy } from \"gatsby-core-utils\"\n\nlet cachedPageData\nlet cachedWebpackCompilationHash\nif (process.env.GATSBY_EXPERIMENTAL_PAGE_BUILD_ON_DATA_CHANGES) {\n  const { pageData, webpackCompilationHash } = readState()\n  // extract only data that we need to reuse and let v8 garbage collect rest of state\n  cachedPageData = pageData\n  cachedWebpackCompilationHash = webpackCompilationHash\n}\n\ninterface IBuildArgs extends IProgram {\n  directory: string\n  sitePackageJson: PackageJson\n  prefixPaths: boolean\n  noUglify: boolean\n  profile: boolean\n  graphqlTracing: boolean\n  openTracingConfigFile: string\n  keepPageRenderer: boolean\n}\n\nmodule.exports = async function build(program: IBuildArgs): Promise<void> {\n  if (isTruthy(process.env.VERBOSE)) {\n    program.verbose = true\n  }\n  report.setVerbose(program.verbose)\n\n  if (program.profile) {\n    report.warn(\n      `React Profiling is enabled. This can have a performance impact. See https://www.gatsbyjs.org/docs/profiling-site-performance-with-react-profiler/#performance-impact`\n    )\n  }\n\n  await updateSiteMetadata({\n    name: program.sitePackageJson.name,\n    sitePath: program.directory,\n    lastRun: Date.now(),\n    pid: process.pid,\n  })\n\n  markWebpackStatusAsPending()\n\n  const publicDir = path.join(program.directory, `public`)\n  initTracer(program.openTracingConfigFile)\n  const buildActivity = report.phantomActivity(`build`)\n  buildActivity.start()\n\n  telemetry.trackCli(`BUILD_START`)\n  signalExit(exitCode => {\n    telemetry.trackCli(`BUILD_END`, { exitCode })\n  })\n\n  const buildSpan = buildActivity.span\n  buildSpan.setTag(`directory`, program.directory)\n\n  const { gatsbyNodeGraphQLFunction } = await bootstrap({\n    program,\n    parentSpan: buildSpan,\n  })\n\n  const graphqlRunner = new GraphQLRunner(store, {\n    collectStats: true,\n    graphqlTracing: program.graphqlTracing,\n  })\n\n  const { queryIds } = await calculateDirtyQueries({ store })\n\n  await runStaticQueries({\n    queryIds,\n    parentSpan: buildSpan,\n    store,\n    graphqlRunner,\n  })\n\n  await runPageQueries({\n    queryIds,\n    graphqlRunner,\n    parentSpan: buildSpan,\n    store,\n  })\n\n  await writeOutRequires({\n    store,\n    parentSpan: buildSpan,\n  })\n\n  await apiRunnerNode(`onPreBuild`, {\n    graphql: gatsbyNodeGraphQLFunction,\n    parentSpan: buildSpan,\n  })\n\n  // Copy files from the static directory to\n  // an equivalent static directory within public.\n  copyStaticDirs()\n\n  const buildActivityTimer = report.activityTimer(\n    `Building production JavaScript and CSS bundles`,\n    { parentSpan: buildSpan }\n  )\n  buildActivityTimer.start()\n  let stats\n  try {\n    stats = await buildProductionBundle(program, buildActivityTimer.span)\n  } catch (err) {\n    buildActivityTimer.panic(structureWebpackErrors(Stage.BuildJavascript, err))\n  } finally {\n    buildActivityTimer.end()\n  }\n\n  const workerPool = WorkerPool.create()\n\n  const webpackCompilationHash = stats.hash\n  if (\n    webpackCompilationHash !== store.getState().webpackCompilationHash ||\n    !appDataUtil.exists(publicDir)\n  ) {\n    store.dispatch({\n      type: `SET_WEBPACK_COMPILATION_HASH`,\n      payload: webpackCompilationHash,\n    })\n\n    const rewriteActivityTimer = report.activityTimer(\n      `Rewriting compilation hashes`,\n      {\n        parentSpan: buildSpan,\n      }\n    )\n    rewriteActivityTimer.start()\n\n    await appDataUtil.write(publicDir, webpackCompilationHash)\n\n    rewriteActivityTimer.end()\n  }\n\n  await flushPendingPageDataWrites()\n  markWebpackStatusAsDone()\n\n  if (process.env.GATSBY_EXPERIMENTAL_PAGE_BUILD_ON_DATA_CHANGES) {\n    const { pages } = store.getState()\n    if (cachedPageData) {\n      cachedPageData.forEach((_value, key) => {\n        if (!pages.has(key)) {\n          boundActionCreators.removePageData({\n            id: key,\n          })\n        }\n      })\n    }\n  }\n\n  if (telemetry.isTrackingEnabled()) {\n    // transform asset size to kB (from bytes) to fit 64 bit to numbers\n    const bundleSizes = stats\n      .toJson({ assets: true })\n      .assets.filter(asset => asset.name.endsWith(`.js`))\n      .map(asset => asset.size / 1000)\n    const pageDataSizes = [...store.getState().pageDataStats.values()]\n\n    telemetry.addSiteMeasurement(`BUILD_END`, {\n      bundleStats: telemetry.aggregateStats(bundleSizes),\n      pageDataStats: telemetry.aggregateStats(pageDataSizes),\n      queryStats: graphqlRunner.getStats(),\n    })\n  }\n\n  boundActionCreators.setProgramStatus(`BOOTSTRAP_QUERY_RUNNING_FINISHED`)\n\n  await db.saveState()\n\n  await waitUntilAllJobsComplete()\n\n  // we need to save it again to make sure our latest state has been saved\n  await db.saveState()\n\n  let pagePaths = [...store.getState().pages.keys()]\n\n  // Rebuild subset of pages if user opt into GATSBY_EXPERIMENTAL_PAGE_BUILD_ON_DATA_CHANGES\n  // if there were no source files (for example components, static queries, etc) changes since last build, otherwise rebuild all pages\n  if (process.env.GATSBY_EXPERIMENTAL_PAGE_BUILD_ON_DATA_CHANGES) {\n    if (\n      cachedWebpackCompilationHash === store.getState().webpackCompilationHash\n    ) {\n      pagePaths = buildUtils.getChangedPageDataKeys(\n        store.getState(),\n        cachedPageData\n      )\n    } else if (cachedWebpackCompilationHash) {\n      report.info(\n        report.stripIndent(`\n          One or more of your source files have changed since the last time you ran Gatsby. All\n          pages will be rebuilt.\n        `)\n      )\n    }\n  }\n\n  const buildSSRBundleActivityProgress = report.activityTimer(\n    `Building HTML renderer`,\n    { parentSpan: buildSpan }\n  )\n  buildSSRBundleActivityProgress.start()\n  let pageRenderer: string\n  try {\n    pageRenderer = await buildRenderer(program, Stage.BuildHTML, buildSpan)\n  } catch (err) {\n    buildActivityTimer.panic(structureWebpackErrors(Stage.BuildHTML, err))\n  } finally {\n    buildSSRBundleActivityProgress.end()\n  }\n\n  telemetry.addSiteMeasurement(`BUILD_END`, {\n    pagesCount: pagePaths.length, // number of html files that will be written\n    totalPagesCount: store.getState().pages.size, // total number of pages\n  })\n\n  const buildHTMLActivityProgress = report.createProgress(\n    `Building static HTML for pages`,\n    pagePaths.length,\n    0,\n    {\n      parentSpan: buildSpan,\n    }\n  )\n  buildHTMLActivityProgress.start()\n  try {\n    await doBuildPages(\n      pageRenderer,\n      pagePaths,\n      buildHTMLActivityProgress,\n      workerPool\n    )\n  } catch (err) {\n    let id = `95313` // TODO: verify error IDs exist\n    const context = {\n      errorPath: err.context && err.context.path,\n      ref: ``,\n    }\n\n    const match = err.message.match(\n      /ReferenceError: (window|document|localStorage|navigator|alert|location) is not defined/i\n    )\n    if (match && match[1]) {\n      id = `95312`\n      context.ref = match[1]\n    }\n\n    buildHTMLActivityProgress.panic({\n      id,\n      context,\n      error: err,\n    })\n  }\n  buildHTMLActivityProgress.end()\n\n  if (!program.keepPageRenderer) {\n    try {\n      await deleteRenderer(pageRenderer)\n    } catch (err) {\n      // pass through\n    }\n  }\n\n  let deletedPageKeys: Array<string> = []\n  if (process.env.GATSBY_EXPERIMENTAL_PAGE_BUILD_ON_DATA_CHANGES) {\n    const deletePageDataActivityTimer = report.activityTimer(\n      `Delete previous page data`\n    )\n    deletePageDataActivityTimer.start()\n    deletedPageKeys = buildUtils.collectRemovedPageData(\n      store.getState(),\n      cachedPageData\n    )\n    await buildUtils.removePageFiles(publicDir, deletedPageKeys)\n\n    deletePageDataActivityTimer.end()\n  }\n\n  const postBuildActivityTimer = report.activityTimer(`onPostBuild`, {\n    parentSpan: buildSpan,\n  })\n  postBuildActivityTimer.start()\n  await apiRunnerNode(`onPostBuild`, {\n    graphql: gatsbyNodeGraphQLFunction,\n    parentSpan: buildSpan,\n  })\n  postBuildActivityTimer.end()\n\n  // Wait for any jobs that were started in onPostBuild\n  // This could occur due to queries being run which invoke sharp for instance\n  await waitUntilAllJobsComplete()\n\n  // Make sure we saved the latest state so we have all jobs cached\n  await db.saveState()\n\n  report.info(`Done building in ${process.uptime()} sec`)\n\n  buildSpan.finish()\n  await stopTracer()\n  workerPool.end()\n  buildActivity.end()\n\n  if (\n    process.env.GATSBY_EXPERIMENTAL_PAGE_BUILD_ON_DATA_CHANGES &&\n    process.argv.includes(`--log-pages`)\n  ) {\n    if (pagePaths.length) {\n      report.info(\n        `Built pages:\\n${pagePaths\n          .map(path => `Updated page: ${path}`)\n          .join(`\\n`)}`\n      )\n    }\n\n    if (deletedPageKeys.length) {\n      report.info(\n        `Deleted pages:\\n${deletedPageKeys\n          .map(path => `Deleted page: ${path}`)\n          .join(`\\n`)}`\n      )\n    }\n  }\n\n  if (\n    process.env.GATSBY_EXPERIMENTAL_PAGE_BUILD_ON_DATA_CHANGES &&\n    process.argv.includes(`--write-to-file`)\n  ) {\n    const createdFilesPath = path.resolve(\n      `${program.directory}/.cache`,\n      `newPages.txt`\n    )\n    const createdFilesContent = pagePaths.length\n      ? `${pagePaths.join(`\\n`)}\\n`\n      : ``\n\n    const deletedFilesPath = path.resolve(\n      `${program.directory}/.cache`,\n      `deletedPages.txt`\n    )\n    const deletedFilesContent = deletedPageKeys.length\n      ? `${deletedPageKeys.join(`\\n`)}\\n`\n      : ``\n\n    await fs.writeFile(createdFilesPath, createdFilesContent, `utf8`)\n    report.info(`.cache/newPages.txt created`)\n\n    await fs.writeFile(deletedFilesPath, deletedFilesContent, `utf8`)\n    report.info(`.cache/deletedPages.txt created`)\n  }\n\n  if (await userGetsSevenDayFeedback()) {\n    showSevenDayFeedbackRequest()\n  } else if (await userPassesFeedbackRequestHeuristic()) {\n    showFeedbackRequest()\n  }\n}\n"],"file":"build.js"}