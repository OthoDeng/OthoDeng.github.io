{"version":3,"file":"remoteSchema.js","names":["remoteSchema","state","wpUrl","nodeQueries","nonNodeQuery","introspectionData","schemaWasChanged","typeMap","nodeListFilter","field","name","ingestibles","nodeListRootFields","nodeInterfaceTypes","nonNodeRootFields","allowRefreshSchemaUpdate","fetchedTypes","Map","fieldBlacklist","fieldAliases","parent","children","internal","plugin","actionOptions","fields","reducers","toggleAllowRefreshSchemaUpdate","setSchemaWasChanged","payload","addFieldsToBlackList","setState","addFetchedType","type","key","findNamedTypeName","get","kind","possibleTypes","length","set"],"sources":["../../src/models/remoteSchema.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { findNamedTypeName } from \"~/steps/create-schema-customization/helpers\"\n\ninterface IRemoteSchemaState {\n  wpUrl: string\n  nodeQueries: any\n  nonNodeQuery: string\n  introspectionData: any\n  schemaWasChanged: boolean\n  typeMap: any\n  nodeListFilter: (field: { name: string }) => boolean\n  ingestibles: {\n    nodeListRootFields: any\n    nodeInterfaceTypes: any\n    nonNodeRootFields: Array<any>\n  }\n  allowRefreshSchemaUpdate: boolean\n  fetchedTypes: any\n  fieldBlacklist: Array<string>\n  fieldAliases: {\n    parent: string\n    children: string\n    internal: string\n    plugin: string\n    actionOptions: string\n    fields: string\n  }\n}\n\ninterface IRemoteSchemaReducers {\n  toggleAllowRefreshSchemaUpdate: (\n    state: IRemoteSchemaState\n  ) => IRemoteSchemaState\n\n  setSchemaWasChanged: (\n    state: IRemoteSchemaState,\n    payload: boolean\n  ) => IRemoteSchemaState\n\n  addFieldsToBlackList: (\n    state: IRemoteSchemaState,\n    payload: Array<string>\n  ) => IRemoteSchemaState\n\n  setState: (\n    state: IRemoteSchemaState,\n    payload: IRemoteSchemaState\n  ) => IRemoteSchemaState\n\n  addFetchedType: (state: IRemoteSchemaState, type: any) => IRemoteSchemaState\n}\n\ninterface IRemoteSchemaStore {\n  state: IRemoteSchemaState\n  reducers: IRemoteSchemaReducers\n}\n\nconst remoteSchema: IRemoteSchemaStore = {\n  state: {\n    wpUrl: null,\n    nodeQueries: {},\n    nonNodeQuery: null,\n    introspectionData: null,\n    schemaWasChanged: null,\n    typeMap: null,\n    nodeListFilter: (field: { name: string }): boolean =>\n      field.name === `nodes`,\n    ingestibles: {\n      nodeListRootFields: null,\n      nodeInterfaceTypes: null,\n      nonNodeRootFields: [],\n    },\n    allowRefreshSchemaUpdate: false,\n    fetchedTypes: new Map(),\n    fieldBlacklist: [\n      `isWpGatsby`,\n      `edges`,\n      // these aren't useful without authentication\n      `revisions`,\n      `isJwtAuthSecretRevoked`,\n      `isRestricted`,\n      `jwtAuthExpiration`,\n      `jwtAuthToken`,\n      `jwtRefreshToken`,\n      `jwtUserSecret`,\n      `editLock`,\n      `revisionOf`,\n      `preview`,\n      `isPreview`,\n      `previewRevisionDatabaseId`,\n      `previewRevisionId`,\n      `editingLockedBy`,\n      `cursor`,\n    ],\n    // @todo make this a plugin option\n    fieldAliases: {\n      parent: `wpParent`,\n      children: `wpChildren`,\n      internal: `wpInternal`,\n      plugin: `wpPlugin`,\n      actionOptions: `wpActionOptions`,\n      fields: `wpFields`,\n    },\n  },\n\n  reducers: {\n    toggleAllowRefreshSchemaUpdate(state) {\n      state.allowRefreshSchemaUpdate = !state.allowRefreshSchemaUpdate\n\n      return state\n    },\n\n    setSchemaWasChanged(state, payload) {\n      state.schemaWasChanged = !!payload\n\n      return state\n    },\n\n    addFieldsToBlackList(state, payload) {\n      state.fieldBlacklist = [...state.fieldBlacklist, ...payload]\n      return state\n    },\n\n    setState(state, payload) {\n      state = {\n        ...state,\n        ...payload,\n      }\n\n      return state\n    },\n\n    addFetchedType(state, type) {\n      const key = findNamedTypeName(type)\n\n      if (!key) {\n        return state\n      }\n\n      type = state.typeMap.get(key)\n\n      // union types with no member types will cause schema customization errors\n      // @todo move this to a better place. This should be excluded before it gets to this point.\n      if (type && type.kind === `UNION` && type.possibleTypes.length === 0) {\n        return state\n      }\n\n      state.fetchedTypes.set(key, type)\n\n      return state\n    },\n  } as IRemoteSchemaReducers,\n}\n\nexport default remoteSchema\n"],"mappings":";;;;AACA;AADA;;AAyDA,MAAMA,YAAgC,GAAG;EACvCC,KAAK,EAAE;IACLC,KAAK,EAAE,IAAI;IACXC,WAAW,EAAE,CAAC,CAAC;IACfC,YAAY,EAAE,IAAI;IAClBC,iBAAiB,EAAE,IAAI;IACvBC,gBAAgB,EAAE,IAAI;IACtBC,OAAO,EAAE,IAAI;IACbC,cAAc,EAAGC,KAAuB,IACtCA,KAAK,CAACC,IAAI,KAAM,OAAM;IACxBC,WAAW,EAAE;MACXC,kBAAkB,EAAE,IAAI;MACxBC,kBAAkB,EAAE,IAAI;MACxBC,iBAAiB,EAAE;IACrB,CAAC;IACDC,wBAAwB,EAAE,KAAK;IAC/BC,YAAY,EAAE,IAAIC,GAAG,EAAE;IACvBC,cAAc,EAAE,CACb,YAAW,EACX,OAAM;IACP;IACC,WAAU,EACV,wBAAuB,EACvB,cAAa,EACb,mBAAkB,EAClB,cAAa,EACb,iBAAgB,EAChB,eAAc,EACd,UAAS,EACT,YAAW,EACX,SAAQ,EACR,WAAU,EACV,2BAA0B,EAC1B,mBAAkB,EAClB,iBAAgB,EAChB,QAAO,CACT;IACD;IACAC,YAAY,EAAE;MACZC,MAAM,EAAG,UAAS;MAClBC,QAAQ,EAAG,YAAW;MACtBC,QAAQ,EAAG,YAAW;MACtBC,MAAM,EAAG,UAAS;MAClBC,aAAa,EAAG,iBAAgB;MAChCC,MAAM,EAAG;IACX;EACF,CAAC;EAEDC,QAAQ,EAAE;IACRC,8BAA8B,CAAC1B,KAAK,EAAE;MACpCA,KAAK,CAACc,wBAAwB,GAAG,CAACd,KAAK,CAACc,wBAAwB;MAEhE,OAAOd,KAAK;IACd,CAAC;IAED2B,mBAAmB,CAAC3B,KAAK,EAAE4B,OAAO,EAAE;MAClC5B,KAAK,CAACK,gBAAgB,GAAG,CAAC,CAACuB,OAAO;MAElC,OAAO5B,KAAK;IACd,CAAC;IAED6B,oBAAoB,CAAC7B,KAAK,EAAE4B,OAAO,EAAE;MACnC5B,KAAK,CAACiB,cAAc,GAAG,CAAC,GAAGjB,KAAK,CAACiB,cAAc,EAAE,GAAGW,OAAO,CAAC;MAC5D,OAAO5B,KAAK;IACd,CAAC;IAED8B,QAAQ,CAAC9B,KAAK,EAAE4B,OAAO,EAAE;MACvB5B,KAAK,GAAG;QACN,GAAGA,KAAK;QACR,GAAG4B;MACL,CAAC;MAED,OAAO5B,KAAK;IACd,CAAC;IAED+B,cAAc,CAAC/B,KAAK,EAAEgC,IAAI,EAAE;MAC1B,MAAMC,GAAG,GAAG,IAAAC,0BAAiB,EAACF,IAAI,CAAC;MAEnC,IAAI,CAACC,GAAG,EAAE;QACR,OAAOjC,KAAK;MACd;MAEAgC,IAAI,GAAGhC,KAAK,CAACM,OAAO,CAAC6B,GAAG,CAACF,GAAG,CAAC;;MAE7B;MACA;MACA,IAAID,IAAI,IAAIA,IAAI,CAACI,IAAI,KAAM,OAAM,IAAIJ,IAAI,CAACK,aAAa,CAACC,MAAM,KAAK,CAAC,EAAE;QACpE,OAAOtC,KAAK;MACd;MAEAA,KAAK,CAACe,YAAY,CAACwB,GAAG,CAACN,GAAG,EAAED,IAAI,CAAC;MAEjC,OAAOhC,KAAK;IACd;EACF;AACF,CAAC;AAAA,eAEcD,YAAY;AAAA"}