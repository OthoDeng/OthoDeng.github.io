{"version":3,"file":"cache.js","names":["MAX_CACHE_SIZE","TTL","Number","MAX_SAFE_INTEGER","cacheDir","Cache","constructor","name","store","fsStore","cacheDirectory","cache","cacheBase","path","join","process","cwd","directory","init","fs","ensureDirSync","configs","max","ttl","options","caches","map","manager","caching","multiCaching","get","key","Promise","resolve","Error","err","res","undefined","set","value","args","Map","getCacheInstance","shouldHardCacheData","isDevelop","env","NODE_ENV","pluginOptions","develop","hardCacheData","getState","gatsbyApi","setHardCachedData","hardCache","getHardCachedData","data","getHardCachedNodes","allWpNodes","shouldUseHardDataCache","length","staticFileCacheDirectory","staticFileDirectory","restoreStaticDirectory","copy","copyStaticDirectory","setHardCachedNodes","helpers","allNodes","getNodes","filter","node","internal","owner","clearHardCache","rimraf","clearHardCachedNodes","hardCachedNodes","setPersistentCache","getGatsbyApi","all","getPersistentCache","cachedData","hardCachedData","restoreHardCachedNodes","loggerTypeCounts","reporter","type","endsWith","createContentDigest","actions","createMediaItemNode","parentName","contentDigest","typeSettingsCache","typeSettings","getTypeSettingsByType","remoteNode","beforeChangeNode","receivedRemoteNode","actionType","fetchGraphql","buildTypeName","wpStore","createNode","Object","entries","forEach","typeName","count","dispatch","logger","createActivityTimer","incrementActivityTimer","by","action","stopActivityTimer","createdNodeIds","id"],"sources":["../../src/utils/cache.ts"],"sourcesContent":["import { GatsbyHelpers } from \"~/utils/gatsby-types\"\nimport manager from \"cache-manager\"\nimport fs from \"fs-extra\"\nimport fsStore from \"cache-manager-fs-hash\"\nimport path from \"path\"\nimport rimraf from \"rimraf\"\n\nimport store from \"~/store\"\nimport { getGatsbyApi } from \"~/utils/get-gatsby-api\"\n\nimport fetchGraphql from \"~/utils/fetch-graphql\"\n\nimport {\n  getTypeSettingsByType,\n  buildTypeName,\n} from \"~/steps/create-schema-customization/helpers\"\n\nimport { createMediaItemNode } from \"~/steps/source-nodes/fetch-nodes/fetch-referenced-media-items\"\nimport type { Node } from \"gatsby\"\n\nconst MAX_CACHE_SIZE = 250\nconst TTL = Number.MAX_SAFE_INTEGER\nconst cacheDir = `.wordpress-cache/caches`\n\ntype Store = manager.StoreConfig[\"store\"]\n\ninterface ICacheOptions {\n  name?: string\n  store?: Store\n}\nexport default class Cache {\n  private store: Store\n  private name: string\n  private cacheDirectory: string\n  private cache: manager.MultiCache\n  constructor({ name = `db`, store = fsStore }: ICacheOptions = {}) {\n    this.name = name\n    this.store = store\n    this.cacheDirectory = cacheDir\n  }\n\n  get cacheBase(): string {\n    return path.join(process.cwd(), this.cacheDirectory)\n  }\n\n  get directory(): string {\n    return `${this.cacheBase}/${this.name}`\n  }\n\n  init(): Cache {\n    fs.ensureDirSync(this.directory)\n\n    const configs: Array<manager.StoreConfig> = [\n      {\n        store: `memory`,\n        max: MAX_CACHE_SIZE,\n        ttl: TTL,\n      },\n      {\n        store: this.store,\n        ttl: TTL,\n        options: {\n          path: this.directory,\n          ttl: TTL,\n        },\n      },\n    ]\n\n    const caches = configs.map(cache => manager.caching(cache))\n\n    this.cache = manager.multiCaching(caches)\n\n    return this\n  }\n\n  get(key: string): Promise<unknown> {\n    return new Promise(resolve => {\n      if (!this.cache) {\n        throw new Error(\n          `Cache wasn't initialised yet, please run the init method first`\n        )\n      }\n      this.cache.get(key, (err, res) => {\n        resolve(err ? undefined : res)\n      })\n    })\n  }\n\n  set(key: string, value: unknown, args = { ttl: TTL }): Promise<unknown> {\n    return new Promise(resolve => {\n      if (!this.cache) {\n        throw new Error(\n          `Cache wasn't initialised yet, please run the init method first`\n        )\n      }\n      this.cache.set(key, value, args, err => {\n        resolve(err ? undefined : value)\n      })\n    })\n  }\n}\n\nconst caches = new Map()\n\nexport const getCacheInstance = (name: string): Cache => {\n  let cache = caches.get(name)\n  if (!cache) {\n    cache = new Cache({ name }).init()\n    caches.set(name, cache)\n  }\n  return cache\n}\n\nexport const shouldHardCacheData = (): boolean => {\n  const isDevelop = process.env.NODE_ENV === `development`\n\n  if (!isDevelop) {\n    return false\n  }\n\n  const {\n    pluginOptions: {\n      develop: { hardCacheData },\n    },\n  } = store.getState().gatsbyApi\n\n  return hardCacheData\n}\n\nexport const setHardCachedData = async ({\n  key,\n  value,\n}: {\n  key: string\n  value: unknown\n}): Promise<unknown> => {\n  if (!shouldHardCacheData()) {\n    return\n  }\n\n  const hardCache = getCacheInstance(`wordpress-data`)\n\n  await hardCache.set(key, value)\n}\n\nexport const getHardCachedData = async <T = Node>({\n  key,\n}: {\n  key: string\n}): Promise<T> => {\n  if (!shouldHardCacheData()) {\n    return null\n  }\n\n  const hardCache = getCacheInstance(`wordpress-data`)\n\n  const data = await hardCache.get(key)\n\n  return data as T\n}\n\nexport const getHardCachedNodes = async (): Promise<null | Array<Node>> => {\n  const allWpNodes = await getHardCachedData<Array<Node>>({ key: `allWpNodes` })\n\n  const shouldUseHardDataCache = allWpNodes?.length\n\n  if (shouldUseHardDataCache) {\n    return allWpNodes\n  }\n\n  return null\n}\n\nconst staticFileCacheDirectory = `${process.cwd()}/.wordpress-cache/caches/public/static`\nconst staticFileDirectory = `${process.cwd()}/public/static`\n\nexport const restoreStaticDirectory = async (): Promise<void> => {\n  await fs.copy(staticFileCacheDirectory, staticFileDirectory)\n}\n\nconst copyStaticDirectory = async (): Promise<void> => {\n  await fs.copy(staticFileDirectory, staticFileCacheDirectory)\n}\n\nexport const setHardCachedNodes = async ({\n  helpers,\n}: {\n  helpers: GatsbyHelpers\n}): Promise<void> => {\n  if (!shouldHardCacheData()) {\n    return\n  }\n\n  const allNodes = await helpers.getNodes()\n\n  const allWpNodes = allNodes.filter(\n    (node: Node) => node.internal.owner === `gatsby-source-wordpress`\n  )\n\n  await setHardCachedData({\n    key: `allWpNodes`,\n    value: allWpNodes,\n  })\n\n  // if we're hard caching data,\n  // that means any inline html images paths will be baked into\n  // the processed hard cached nodes.\n  // so we need to copy the static directory\n  await copyStaticDirectory()\n}\n\nexport const clearHardCache = async (): Promise<void> => {\n  await new Promise(resolve => {\n    const directory = new Cache().cacheBase\n\n    rimraf(directory, resolve)\n  })\n}\n\nexport const clearHardCachedNodes = async (): Promise<void> => {\n  const hardCachedNodes = !!(await getHardCachedNodes())\n\n  if (hardCachedNodes) {\n    await setHardCachedData({\n      key: `allWpNodes`,\n      value: null,\n    })\n  }\n}\n\n// persistent cache\nexport const setPersistentCache = async ({\n  key,\n  value,\n}: {\n  key: string\n  value: unknown\n}): Promise<void> => {\n  const { helpers } = getGatsbyApi()\n\n  await Promise.all([\n    // set Gatsby cache\n    helpers.cache.set(key, value),\n    // and hard cache\n    setHardCachedData({ key, value }),\n  ])\n}\n\nexport const getPersistentCache = async ({\n  key,\n}: {\n  key: string\n}): Promise<unknown> => {\n  const { helpers } = getGatsbyApi()\n\n  const cachedData = await helpers.cache.get(key)\n\n  if (cachedData) {\n    return cachedData\n  }\n\n  const hardCachedData = await getHardCachedData({ key })\n\n  return hardCachedData\n}\n\nexport const restoreHardCachedNodes = async ({\n  hardCachedNodes,\n}: {\n  hardCachedNodes: Array<Node>\n}): Promise<Array<string>> => {\n  const loggerTypeCounts = {}\n\n  const { helpers, pluginOptions } = getGatsbyApi()\n  const { reporter } = helpers\n\n  // restore nodes\n  await Promise.all(\n    hardCachedNodes.map(async node => {\n      if (!loggerTypeCounts[node.internal.type]) {\n        loggerTypeCounts[node.internal.type] = 0\n      }\n\n      loggerTypeCounts[node.internal.type] += 1\n\n      // media items are created in a special way\n      if (node.internal.type.endsWith(`MediaItem`)) {\n        delete node.internal\n\n        const { createContentDigest, actions } = helpers\n\n        return createMediaItemNode({\n          node,\n          helpers,\n          createContentDigest,\n          actions,\n          parentName: `Hard cache restoration`,\n          // referencedMediaItemNodeIds,\n          // allMediaItemNodes = [],\n        })\n      }\n\n      node.internal = {\n        contentDigest: node.internal.contentDigest,\n        type: node.internal.type,\n      } as Node[\"internal\"]\n\n      const typeSettingsCache = {}\n\n      const typeSettings =\n        // TODO: extend node type for wordpress?\n        typeSettingsCache[node.type as string] ??\n        getTypeSettingsByType({\n          name: node.type,\n        })\n\n      let remoteNode = node\n\n      if (\n        typeSettings.beforeChangeNode &&\n        typeof typeSettings.beforeChangeNode === `function`\n      ) {\n        const {\n          // additionalNodeIds: receivedAdditionalNodeIds,\n          remoteNode: receivedRemoteNode,\n          // cancelUpdate: receivedCancelUpdate,\n        } =\n          (await typeSettings.beforeChangeNode({\n            actionType: `CREATE_ALL`,\n            remoteNode,\n            actions: helpers.actions,\n            helpers,\n            fetchGraphql,\n            typeSettings,\n            buildTypeName,\n            type: node.type,\n            wpStore: store,\n          })) || {}\n\n        if (receivedRemoteNode) {\n          remoteNode = receivedRemoteNode\n        }\n      }\n\n      // restore each node\n      // TODO: update gatsby types\n      await helpers.actions.createNode(remoteNode)\n\n      return null\n    })\n  )\n\n  Object.entries(loggerTypeCounts).forEach(([typeName, count]) => {\n    store.dispatch.logger.createActivityTimer({\n      typeName,\n      pluginOptions,\n      reporter,\n    })\n\n    store.dispatch.logger.incrementActivityTimer({\n      typeName,\n      by: count,\n      action: `restored`,\n    })\n\n    store.dispatch.logger.stopActivityTimer({\n      typeName,\n      action: `restored`,\n    })\n  })\n\n  // restore static directory\n  await restoreStaticDirectory()\n\n  // build createdNodeIds id array to be cached 1 level above\n  const createdNodeIds = hardCachedNodes.map(node => node.id)\n\n  return createdNodeIds\n}\n"],"mappings":"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"}