{"version":3,"file":"set-gatsby-api-to-state.js","names":["hasDisplayedPreviewPresetMessage","setGatsbyApiToState","helpers","pluginOptions","traceId","filteredPluginOptions","processAndValidatePluginOptions","store","dispatch","gatsbyApi","setState","activePluginOptionsPresets","getState","length","previewOptimizationPreset","find","presetName","reporter","info","formatLogMessage","usingGatsbyV4OrGreater","options","type","__all","limit"],"sources":["../../src/steps/set-gatsby-api-to-state.ts"],"sourcesContent":["import store from \"~/store\"\nimport { processAndValidatePluginOptions } from \"./process-and-validate-plugin-options\"\nimport { formatLogMessage } from \"../utils/format-log-message\"\nimport { IPluginOptions } from \"~/models/gatsby-api\"\nimport { GatsbyNodeApiHelpers } from \"~/utils/gatsby-types\"\nimport { usingGatsbyV4OrGreater } from \"~/utils/gatsby-version\"\n\nlet hasDisplayedPreviewPresetMessage = false\n\nconst setGatsbyApiToState = (\n  helpers: GatsbyNodeApiHelpers,\n  pluginOptions: IPluginOptions\n): void => {\n  if (helpers.traceId === `refresh-createSchemaCustomization`) {\n    return\n  }\n\n  const filteredPluginOptions = processAndValidatePluginOptions(\n    helpers,\n    pluginOptions\n  )\n\n  //\n  // add the plugin options and Gatsby API helpers to our store\n  // to access them more easily\n  store.dispatch.gatsbyApi.setState({\n    helpers,\n    pluginOptions: filteredPluginOptions,\n  })\n\n  if (!hasDisplayedPreviewPresetMessage) {\n    const { activePluginOptionsPresets, helpers } = store.getState().gatsbyApi\n\n    if (activePluginOptionsPresets?.length) {\n      const previewOptimizationPreset = activePluginOptionsPresets.find(\n        ({ presetName }) => presetName === `PREVIEW_OPTIMIZATION`\n      )\n\n      if (previewOptimizationPreset) {\n        helpers.reporter.info(\n          formatLogMessage(\n            `\\nSince the \"Preview Optimization\" plugin option preset is enabled\\n${\n              !usingGatsbyV4OrGreater\n                ? `we aren't fetching more than ${previewOptimizationPreset.options.type.__all.limit} nodes of each type.\\nAdditionally, `\n                : ``\n            }Gatsby image and static file links in HTML fields are disabled.\\nIf you want to change this, please check the Preview docs for this plugin.\\nhttps://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby-source-wordpress/docs/features/preview.md`\n          )\n        )\n      }\n    }\n\n    hasDisplayedPreviewPresetMessage = true\n  }\n}\n\nexport { setGatsbyApiToState }\n"],"mappings":";;;;;AAAA;AACA;AACA;AAGA;AAEA,IAAIA,gCAAgC,GAAG,KAAK;AAE5C,MAAMC,mBAAmB,GAAG,CAC1BC,OAA6B,EAC7BC,aAA6B,KACpB;EACT,IAAID,OAAO,CAACE,OAAO,KAAM,mCAAkC,EAAE;IAC3D;EACF;EAEA,MAAMC,qBAAqB,GAAG,IAAAC,gEAA+B,EAC3DJ,OAAO,EACPC,aAAa,CACd;;EAED;EACA;EACA;EACAI,cAAK,CAACC,QAAQ,CAACC,SAAS,CAACC,QAAQ,CAAC;IAChCR,OAAO;IACPC,aAAa,EAAEE;EACjB,CAAC,CAAC;EAEF,IAAI,CAACL,gCAAgC,EAAE;IACrC,MAAM;MAAEW,0BAA0B;MAAET;IAAQ,CAAC,GAAGK,cAAK,CAACK,QAAQ,EAAE,CAACH,SAAS;IAE1E,IAAIE,0BAA0B,aAA1BA,0BAA0B,eAA1BA,0BAA0B,CAAEE,MAAM,EAAE;MACtC,MAAMC,yBAAyB,GAAGH,0BAA0B,CAACI,IAAI,CAC/D,CAAC;QAAEC;MAAW,CAAC,KAAKA,UAAU,KAAM,sBAAqB,CAC1D;MAED,IAAIF,yBAAyB,EAAE;QAC7BZ,OAAO,CAACe,QAAQ,CAACC,IAAI,CACnB,IAAAC,kCAAgB,EACb,uEACC,CAACC,qCAAsB,GAClB,gCAA+BN,yBAAyB,CAACO,OAAO,CAACC,IAAI,CAACC,KAAK,CAACC,KAAM,sCAAqC,GACvH,EACN,uPAAsP,CACxP,CACF;MACH;IACF;IAEAxB,gCAAgC,GAAG,IAAI;EACzC;AACF,CAAC;AAAA"}