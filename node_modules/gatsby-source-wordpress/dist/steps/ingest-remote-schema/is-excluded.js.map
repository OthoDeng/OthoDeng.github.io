{"version":3,"file":"is-excluded.js","names":["typeIsExcluded","pluginOptions","typeName","type","exclude","fieldIsExcludedOnAll","field","allFieldSettings","__all","excludeFieldNames","includes","name","fieldIsExcludedOnParentType","parentType","state","store","getState","typeMap","remoteSchema","fullType","get","findNamedTypeName","parentTypeNodesField","fields","find","parentTypeNameSettings","getTypeSettingsByType","parentTypeNodesFieldTypeNameSettings"],"sources":["../../../src/steps/ingest-remote-schema/is-excluded.js"],"sourcesContent":["import store from \"~/store\"\nimport {\n  findNamedTypeName,\n  getTypeSettingsByType,\n} from \"~/steps/create-schema-customization/helpers\"\n\nconst typeIsExcluded = ({ pluginOptions, typeName }) =>\n  pluginOptions &&\n  pluginOptions.type[typeName] &&\n  pluginOptions.type[typeName].exclude\n\nconst fieldIsExcludedOnAll = ({ pluginOptions, field }) => {\n  const allFieldSettings = pluginOptions?.type?.__all\n\n  if (!allFieldSettings) {\n    return false\n  }\n  return !!allFieldSettings?.excludeFieldNames?.includes(field?.name)\n}\n\nconst fieldIsExcludedOnParentType = ({ field, parentType }) => {\n  const state = store.getState()\n  const { typeMap } = state.remoteSchema\n\n  const fullType = typeMap.get(findNamedTypeName(parentType))\n\n  const parentTypeNodesField = fullType?.fields?.find(\n    field => field.name === `nodes`\n  )\n\n  const parentTypeNameSettings = getTypeSettingsByType(parentType)\n  const parentTypeNodesFieldTypeNameSettings = getTypeSettingsByType(\n    parentTypeNodesField?.type\n  )\n\n  const fieldIsExcludedOnParentType =\n    // if this field is excluded on either the parent type\n    parentTypeNameSettings?.excludeFieldNames?.includes(field?.name) ||\n    // or the parent type has a \"nodes\" field and that type has this field excluded\n    parentTypeNodesFieldTypeNameSettings?.excludeFieldNames?.includes(\n      field?.name\n    )\n\n  return !!fieldIsExcludedOnParentType\n}\n\nexport { typeIsExcluded, fieldIsExcludedOnAll, fieldIsExcludedOnParentType }\n"],"mappings":";;;;;AAAA;AACA;AAKA,MAAMA,cAAc,GAAG,CAAC;EAAEC,aAAa;EAAEC;AAAS,CAAC,KACjDD,aAAa,IACbA,aAAa,CAACE,IAAI,CAACD,QAAQ,CAAC,IAC5BD,aAAa,CAACE,IAAI,CAACD,QAAQ,CAAC,CAACE,OAAO;AAAA;AAEtC,MAAMC,oBAAoB,GAAG,CAAC;EAAEJ,aAAa;EAAEK;AAAM,CAAC,KAAK;EAAA;EACzD,MAAMC,gBAAgB,GAAGN,aAAa,aAAbA,aAAa,8CAAbA,aAAa,CAAEE,IAAI,wDAAnB,oBAAqBK,KAAK;EAEnD,IAAI,CAACD,gBAAgB,EAAE;IACrB,OAAO,KAAK;EACd;EACA,OAAO,CAAC,EAACA,gBAAgB,aAAhBA,gBAAgB,wCAAhBA,gBAAgB,CAAEE,iBAAiB,kDAAnC,sBAAqCC,QAAQ,CAACJ,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEK,IAAI,CAAC;AACrE,CAAC;AAAA;AAED,MAAMC,2BAA2B,GAAG,CAAC;EAAEN,KAAK;EAAEO;AAAW,CAAC,KAAK;EAAA;EAC7D,MAAMC,KAAK,GAAGC,cAAK,CAACC,QAAQ,EAAE;EAC9B,MAAM;IAAEC;EAAQ,CAAC,GAAGH,KAAK,CAACI,YAAY;EAEtC,MAAMC,QAAQ,GAAGF,OAAO,CAACG,GAAG,CAAC,IAAAC,0BAAiB,EAACR,UAAU,CAAC,CAAC;EAE3D,MAAMS,oBAAoB,GAAGH,QAAQ,aAARA,QAAQ,2CAARA,QAAQ,CAAEI,MAAM,qDAAhB,iBAAkBC,IAAI,CACjDlB,KAAK,IAAIA,KAAK,CAACK,IAAI,KAAM,OAAM,CAChC;EAED,MAAMc,sBAAsB,GAAG,IAAAC,8BAAqB,EAACb,UAAU,CAAC;EAChE,MAAMc,oCAAoC,GAAG,IAAAD,8BAAqB,EAChEJ,oBAAoB,aAApBA,oBAAoB,uBAApBA,oBAAoB,CAAEnB,IAAI,CAC3B;EAED,MAAMS,2BAA2B;EAC/B;EACA,CAAAa,sBAAsB,aAAtBA,sBAAsB,gDAAtBA,sBAAsB,CAAEhB,iBAAiB,0DAAzC,sBAA2CC,QAAQ,CAACJ,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEK,IAAI,CAAC,OAChE;EACAgB,oCAAoC,aAApCA,oCAAoC,gDAApCA,oCAAoC,CAAElB,iBAAiB,0DAAvD,sBAAyDC,QAAQ,CAC/DJ,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEK,IAAI,CACZ;EAEH,OAAO,CAAC,CAACC,2BAA2B;AACtC,CAAC;AAAA"}