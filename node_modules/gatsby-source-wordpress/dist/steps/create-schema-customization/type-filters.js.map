{"version":3,"file":"type-filters.js","names":["typeDefinitionFilters","typeName","typeDef","type","interfaces","push","buildInterfacesListForType","includes","fields","nodeType","date","dateField","extensions","dateformat","dateGmt","modified","modifiedGmt","objectType","localFile","link","from"],"sources":["../../../src/steps/create-schema-customization/type-filters.js"],"sourcesContent":["import { buildInterfacesListForType } from \"./helpers\"\n\nexport const typeDefinitionFilters = [\n  {\n    typeName: `__all`,\n    typeDef: (typeDef, { type }) => {\n      if (type.interfaces && typeDef) {\n        typeDef.interfaces ||= []\n        typeDef.interfaces.push(...buildInterfacesListForType(type))\n      }\n\n      if (typeDef?.interfaces?.includes(`Node`)) {\n        // used to filter by different node types within a node interface\n        typeDef.fields.nodeType = `String`\n      }\n\n      if (typeDef?.fields?.date) {\n        const dateField = {\n          ...typeDef.fields.date,\n          type: `Date`,\n          extensions: {\n            dateformat: {},\n          },\n        }\n\n        typeDef.fields.date = dateField\n      }\n\n      if (typeDef?.fields?.dateGmt) {\n        const dateField = {\n          ...typeDef.fields.dateGmt,\n          type: `Date`,\n          extensions: {\n            dateformat: {},\n          },\n        }\n\n        typeDef.fields.dateGmt = dateField\n      }\n\n      if (typeDef?.fields?.modified) {\n        const dateField = {\n          ...typeDef.fields.modified,\n          type: `Date`,\n          extensions: {\n            dateformat: {},\n          },\n        }\n\n        typeDef.fields.modified = dateField\n      }\n\n      if (typeDef?.fields?.modifiedGmt) {\n        const dateField = {\n          ...typeDef.fields.modifiedGmt,\n          type: `Date`,\n          extensions: {\n            dateformat: {},\n          },\n        }\n\n        typeDef.fields.modifiedGmt = dateField\n      }\n\n      return typeDef\n    },\n  },\n  {\n    typeName: `MediaItem`,\n    typeDef: objectType => {\n      objectType.fields.localFile = {\n        type: `File`,\n        extensions: {\n          link: { from: `localFile.id` },\n        },\n      }\n\n      return objectType\n    },\n  },\n]\n"],"mappings":";;;;AAAA;AAEO,MAAMA,qBAAqB,GAAG,CACnC;EACEC,QAAQ,EAAG,OAAM;EACjBC,OAAO,EAAE,CAACA,OAAO,EAAE;IAAEC;EAAK,CAAC,KAAK;IAAA;IAC9B,IAAIA,IAAI,CAACC,UAAU,IAAIF,OAAO,EAAE;MAC9BA,OAAO,CAACE,UAAU,KAAK,EAAE;MACzBF,OAAO,CAACE,UAAU,CAACC,IAAI,CAAC,GAAG,IAAAC,mCAA0B,EAACH,IAAI,CAAC,CAAC;IAC9D;IAEA,IAAID,OAAO,aAAPA,OAAO,sCAAPA,OAAO,CAAEE,UAAU,gDAAnB,oBAAqBG,QAAQ,CAAE,MAAK,CAAC,EAAE;MACzC;MACAL,OAAO,CAACM,MAAM,CAACC,QAAQ,GAAI,QAAO;IACpC;IAEA,IAAIP,OAAO,aAAPA,OAAO,kCAAPA,OAAO,CAAEM,MAAM,4CAAf,gBAAiBE,IAAI,EAAE;MACzB,MAAMC,SAAS,GAAG;QAChB,GAAGT,OAAO,CAACM,MAAM,CAACE,IAAI;QACtBP,IAAI,EAAG,MAAK;QACZS,UAAU,EAAE;UACVC,UAAU,EAAE,CAAC;QACf;MACF,CAAC;MAEDX,OAAO,CAACM,MAAM,CAACE,IAAI,GAAGC,SAAS;IACjC;IAEA,IAAIT,OAAO,aAAPA,OAAO,mCAAPA,OAAO,CAAEM,MAAM,6CAAf,iBAAiBM,OAAO,EAAE;MAC5B,MAAMH,SAAS,GAAG;QAChB,GAAGT,OAAO,CAACM,MAAM,CAACM,OAAO;QACzBX,IAAI,EAAG,MAAK;QACZS,UAAU,EAAE;UACVC,UAAU,EAAE,CAAC;QACf;MACF,CAAC;MAEDX,OAAO,CAACM,MAAM,CAACM,OAAO,GAAGH,SAAS;IACpC;IAEA,IAAIT,OAAO,aAAPA,OAAO,mCAAPA,OAAO,CAAEM,MAAM,6CAAf,iBAAiBO,QAAQ,EAAE;MAC7B,MAAMJ,SAAS,GAAG;QAChB,GAAGT,OAAO,CAACM,MAAM,CAACO,QAAQ;QAC1BZ,IAAI,EAAG,MAAK;QACZS,UAAU,EAAE;UACVC,UAAU,EAAE,CAAC;QACf;MACF,CAAC;MAEDX,OAAO,CAACM,MAAM,CAACO,QAAQ,GAAGJ,SAAS;IACrC;IAEA,IAAIT,OAAO,aAAPA,OAAO,mCAAPA,OAAO,CAAEM,MAAM,6CAAf,iBAAiBQ,WAAW,EAAE;MAChC,MAAML,SAAS,GAAG;QAChB,GAAGT,OAAO,CAACM,MAAM,CAACQ,WAAW;QAC7Bb,IAAI,EAAG,MAAK;QACZS,UAAU,EAAE;UACVC,UAAU,EAAE,CAAC;QACf;MACF,CAAC;MAEDX,OAAO,CAACM,MAAM,CAACQ,WAAW,GAAGL,SAAS;IACxC;IAEA,OAAOT,OAAO;EAChB;AACF,CAAC,EACD;EACED,QAAQ,EAAG,WAAU;EACrBC,OAAO,EAAEe,UAAU,IAAI;IACrBA,UAAU,CAACT,MAAM,CAACU,SAAS,GAAG;MAC5Bf,IAAI,EAAG,MAAK;MACZS,UAAU,EAAE;QACVO,IAAI,EAAE;UAAEC,IAAI,EAAG;QAAc;MAC/B;IACF,CAAC;IAED,OAAOH,UAAU;EACnB;AACF,CAAC,CACF;AAAA"}