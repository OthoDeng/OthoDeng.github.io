{"version":3,"file":"index.js","names":["customizeSchema","actions","schema","store","gatsbyStore","state","getState","gatsbyApi","pluginOptions","remoteSchema","fieldAliases","fieldBlacklist","ingestibles","nonNodeRootFields","typeDefs","gatsbyNodeTypes","getGatsbyNodeTypeNames","typeBuilderApi","introspectionData","__schema","types","forEach","type","fieldOfTypeWasFetched","typeIsExcluded","typeName","name","builtType","kind","buildType","unionType","interfaceType","objectType","enumType","push","wpType","typePrefix","description","fields","interfaces","addRemoteFilePolyfillInterface","buildObjectType","createTypes","createSchemaCustomization","api","e","reporter","panic","id","CODES","SourcePluginCodeError","error","context","sourceMessage","formatLogMessage","message"],"sources":["../../../src/steps/create-schema-customization/index.js"],"sourcesContent":["import store from \"~/store\"\n\nimport { buildInterfacesListForType, fieldOfTypeWasFetched } from \"./helpers\"\n\nimport buildType from \"./build-types\"\nimport { getGatsbyNodeTypeNames } from \"../source-nodes/fetch-nodes/fetch-nodes\"\nimport { typeIsExcluded } from \"~/steps/ingest-remote-schema/is-excluded\"\nimport { formatLogMessage } from \"../../utils/format-log-message\"\nimport { CODES } from \"../../utils/report\"\nimport { addRemoteFilePolyfillInterface } from \"gatsby-plugin-utils/polyfill-remote-file\"\n\n/**\n * createSchemaCustomization\n */\nconst customizeSchema = async ({ actions, schema, store: gatsbyStore }) => {\n  const state = store.getState()\n\n  const {\n    gatsbyApi: { pluginOptions },\n    remoteSchema,\n  } = state\n\n  const {\n    fieldAliases,\n    fieldBlacklist,\n    ingestibles: { nonNodeRootFields },\n  } = remoteSchema\n\n  const typeDefs = []\n\n  const gatsbyNodeTypes = getGatsbyNodeTypeNames()\n\n  const typeBuilderApi = {\n    typeDefs,\n    schema,\n    gatsbyNodeTypes,\n    fieldAliases,\n    fieldBlacklist,\n    pluginOptions,\n  }\n\n  // create Gatsby node types\n  remoteSchema.introspectionData.__schema.types.forEach(type => {\n    if (\n      fieldOfTypeWasFetched(type) &&\n      !typeIsExcluded({ pluginOptions, typeName: type.name })\n    ) {\n      let builtType\n\n      switch (type.kind) {\n        case `UNION`:\n          builtType = buildType.unionType({ ...typeBuilderApi, type })\n          break\n        case `INTERFACE`:\n          builtType = buildType.interfaceType({ ...typeBuilderApi, type })\n          break\n        case `OBJECT`:\n          builtType = buildType.objectType({ ...typeBuilderApi, type })\n          break\n        case `ENUM`:\n          builtType = buildType.enumType({ ...typeBuilderApi, type })\n          break\n        case `SCALAR`:\n          /**\n           * custom scalar types aren't supported.\n           */\n          break\n      }\n\n      if (builtType) {\n        typeDefs.push(builtType)\n      }\n    }\n  })\n\n  // Create non Gatsby node types by creating a single node\n  // where the typename is the type prefix\n  // The node fields are the non-node root fields of the remote schema\n  // like so: query { prefix { ...fields } }\n  const wpType = buildType.objectType({\n    ...typeBuilderApi,\n    type: {\n      kind: `OBJECT`,\n      name: pluginOptions.schema.typePrefix,\n      description: `Non-node WPGraphQL root fields.`,\n      fields: nonNodeRootFields,\n      interfaces: [`Node`],\n    },\n  })\n\n  typeDefs.push(wpType)\n\n  typeDefs.push(\n    addRemoteFilePolyfillInterface(\n      schema.buildObjectType({\n        name: pluginOptions.schema.typePrefix + `MediaItem`,\n        fields: {},\n        interfaces: [`Node`, `RemoteFile`],\n      }),\n      {\n        schema,\n        actions,\n        store: gatsbyStore,\n      }\n    )\n  )\n\n  actions.createTypes(typeDefs)\n}\n\nconst createSchemaCustomization = async api => {\n  try {\n    await customizeSchema(api)\n  } catch (e) {\n    api.reporter.panic({\n      id: CODES.SourcePluginCodeError,\n      error: e,\n      context: {\n        sourceMessage: formatLogMessage(e.message),\n      },\n    })\n  }\n}\n\nexport { createSchemaCustomization }\n"],"mappings":"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"}