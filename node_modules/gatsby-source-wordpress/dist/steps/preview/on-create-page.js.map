{"version":3,"file":"on-create-page.js","names":["onCreatepageSavePreviewNodeIdToPageDependency","helpers","inPreviewMode","page","getNode","nodeThatCreatedThisPage","context","id","store","dispatch","previewStore","saveNodePageState","nodeId","path","updatedAt","onCreatePageRespondToPreviewStatusQuery","nodePageCreatedCallbacks","pagePathToNodeDependencyId","getState","Object","keys","length","nodeIdThatCreatedThisPage","nodePageCreatedCallback","unSubscribeToPagesCreatedFromNodeById","reporter","warn","formatLogMessage","__wpGatsbyNodeModified","pageCopy","modified","deletePage","createPage","actions","passedNode","pageNode","status"],"sources":["../../../src/steps/preview/on-create-page.ts"],"sourcesContent":["import { formatLogMessage } from \"~/utils/format-log-message\"\nimport store from \"~/store\"\nimport { GatsbyNodeApiHelpers } from \"~/utils/gatsby-types\"\nimport { inPreviewMode } from \".\"\n\n/**\n * during onCreatePage we want to figure out which node the page is dependant on\nand then store that page in state so we can return info about the page to WordPress\nwhen the page is updated during Previews.\nWe do that by finding the node id on pageContext.id\nIdeally we could detect this without the need for pageContext.id.\nThere was an attempt to use store.componentDataDependencies but my implementation\nwas buggy and unreliable. @todo it's worth trying to remove the need for\npageContext.id again in the future.\n */\nexport const onCreatepageSavePreviewNodeIdToPageDependency = (\n  helpers: GatsbyNodeApiHelpers\n): void => {\n  // if we're not in preview mode we don't want to track this\n  if (!inPreviewMode()) {\n    return\n  }\n\n  const { page, getNode } = helpers\n\n  const nodeThatCreatedThisPage =\n    page.context && page.context.id && getNode(page.context.id)\n\n  if (nodeThatCreatedThisPage) {\n    store.dispatch.previewStore.saveNodePageState({\n      nodeId: nodeThatCreatedThisPage.id,\n      page: {\n        path: page.path,\n        updatedAt: page.updatedAt,\n      },\n    })\n  }\n}\n\n/**\n * during onCreatePage we check if the node this page was created from\n * has been updated and if it has a callback waiting for it\n * if both of those things are true we invoke the callback to\n * respond to the WP instance preview client\n */\nexport const onCreatePageRespondToPreviewStatusQuery = async (\n  helpers: GatsbyNodeApiHelpers\n): Promise<void> => {\n  // if we're not in preview mode we don't want to set this up\n  if (!inPreviewMode()) {\n    return\n  }\n\n  const { nodePageCreatedCallbacks, pagePathToNodeDependencyId } =\n    store.getState().previewStore\n\n  const { page, getNode } = helpers\n\n  if (\n    !nodePageCreatedCallbacks ||\n    !Object.keys(nodePageCreatedCallbacks).length\n  ) {\n    return\n  }\n\n  const nodeIdThatCreatedThisPage =\n    pagePathToNodeDependencyId?.[page.path]?.nodeId\n\n  if (!nodeIdThatCreatedThisPage) {\n    return\n  }\n\n  const nodePageCreatedCallback =\n    nodeIdThatCreatedThisPage &&\n    nodePageCreatedCallbacks[nodeIdThatCreatedThisPage]\n\n  if (\n    !nodeIdThatCreatedThisPage ||\n    typeof nodePageCreatedCallback !== `function`\n  ) {\n    return\n  }\n\n  store.dispatch.previewStore.unSubscribeToPagesCreatedFromNodeById({\n    nodeId: nodeIdThatCreatedThisPage,\n  })\n\n  const nodeThatCreatedThisPage = getNode(nodeIdThatCreatedThisPage)\n\n  if (!nodeThatCreatedThisPage) {\n    helpers.reporter.warn(\n      formatLogMessage(\n        `There was an attempt to call a Preview onPageCreated callback for node ${nodeIdThatCreatedThisPage}, but no node was found.`\n      )\n    )\n    return\n  }\n\n  // We need to add the modified time to pageContext so we can read it in WP\n  // This way can tell when the updated page has been deployed\n  if (!page.context.__wpGatsbyNodeModified) {\n    const pageCopy = { ...page }\n    pageCopy.context.__wpGatsbyNodeModified = nodeThatCreatedThisPage.modified\n\n    const { deletePage, createPage } = helpers.actions\n\n    deletePage(page)\n    createPage(pageCopy)\n  }\n\n  await nodePageCreatedCallback({\n    passedNode: nodeThatCreatedThisPage,\n    pageNode: page,\n    context: `onCreatePage Preview callback invocation`,\n    status: `PREVIEW_SUCCESS`,\n  })\n}\n"],"mappings":";;;;;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMA,6CAA6C,GACxDC,OAA6B,IACpB;EACT;EACA,IAAI,CAAC,IAAAC,eAAa,GAAE,EAAE;IACpB;EACF;EAEA,MAAM;IAAEC,IAAI;IAAEC;EAAQ,CAAC,GAAGH,OAAO;EAEjC,MAAMI,uBAAuB,GAC3BF,IAAI,CAACG,OAAO,IAAIH,IAAI,CAACG,OAAO,CAACC,EAAE,IAAIH,OAAO,CAACD,IAAI,CAACG,OAAO,CAACC,EAAE,CAAC;EAE7D,IAAIF,uBAAuB,EAAE;IAC3BG,cAAK,CAACC,QAAQ,CAACC,YAAY,CAACC,iBAAiB,CAAC;MAC5CC,MAAM,EAAEP,uBAAuB,CAACE,EAAE;MAClCJ,IAAI,EAAE;QACJU,IAAI,EAAEV,IAAI,CAACU,IAAI;QACfC,SAAS,EAAEX,IAAI,CAACW;MAClB;IACF,CAAC,CAAC;EACJ;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AALA;AAMO,MAAMC,uCAAuC,GAAG,MACrDd,OAA6B,IACX;EAAA;EAClB;EACA,IAAI,CAAC,IAAAC,eAAa,GAAE,EAAE;IACpB;EACF;EAEA,MAAM;IAAEc,wBAAwB;IAAEC;EAA2B,CAAC,GAC5DT,cAAK,CAACU,QAAQ,EAAE,CAACR,YAAY;EAE/B,MAAM;IAAEP,IAAI;IAAEC;EAAQ,CAAC,GAAGH,OAAO;EAEjC,IACE,CAACe,wBAAwB,IACzB,CAACG,MAAM,CAACC,IAAI,CAACJ,wBAAwB,CAAC,CAACK,MAAM,EAC7C;IACA;EACF;EAEA,MAAMC,yBAAyB,GAC7BL,0BAA0B,aAA1BA,0BAA0B,gDAA1BA,0BAA0B,CAAGd,IAAI,CAACU,IAAI,CAAC,0DAAvC,sBAAyCD,MAAM;EAEjD,IAAI,CAACU,yBAAyB,EAAE;IAC9B;EACF;EAEA,MAAMC,uBAAuB,GAC3BD,yBAAyB,IACzBN,wBAAwB,CAACM,yBAAyB,CAAC;EAErD,IACE,CAACA,yBAAyB,IAC1B,OAAOC,uBAAuB,KAAM,UAAS,EAC7C;IACA;EACF;EAEAf,cAAK,CAACC,QAAQ,CAACC,YAAY,CAACc,qCAAqC,CAAC;IAChEZ,MAAM,EAAEU;EACV,CAAC,CAAC;EAEF,MAAMjB,uBAAuB,GAAGD,OAAO,CAACkB,yBAAyB,CAAC;EAElE,IAAI,CAACjB,uBAAuB,EAAE;IAC5BJ,OAAO,CAACwB,QAAQ,CAACC,IAAI,CACnB,IAAAC,kCAAgB,EACb,0EAAyEL,yBAA0B,0BAAyB,CAC9H,CACF;IACD;EACF;;EAEA;EACA;EACA,IAAI,CAACnB,IAAI,CAACG,OAAO,CAACsB,sBAAsB,EAAE;IACxC,MAAMC,QAAQ,GAAG;MAAE,GAAG1B;IAAK,CAAC;IAC5B0B,QAAQ,CAACvB,OAAO,CAACsB,sBAAsB,GAAGvB,uBAAuB,CAACyB,QAAQ;IAE1E,MAAM;MAAEC,UAAU;MAAEC;IAAW,CAAC,GAAG/B,OAAO,CAACgC,OAAO;IAElDF,UAAU,CAAC5B,IAAI,CAAC;IAChB6B,UAAU,CAACH,QAAQ,CAAC;EACtB;EAEA,MAAMN,uBAAuB,CAAC;IAC5BW,UAAU,EAAE7B,uBAAuB;IACnC8B,QAAQ,EAAEhC,IAAI;IACdG,OAAO,EAAG,0CAAyC;IACnD8B,MAAM,EAAG;EACX,CAAC,CAAC;AACJ,CAAC;AAAA"}