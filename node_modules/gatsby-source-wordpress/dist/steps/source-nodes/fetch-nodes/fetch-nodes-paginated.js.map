{"version":3,"file":"fetch-nodes-paginated.js","names":["normalizeNode","node","nodeTypeName","normalizedNodeTypeName","__typename","type","nodeType","idSet","Set","hasLoggedDuplicateMessage","paginatedWpNodeFetch","contentTypePlural","query","helpers","throwFetchErrors","throwGqlErrors","allContentNodes","after","settings","headers","variables","limit","length","first","errorContext","response","fetchGraphql","data","nodes","pageInfo","hasNextPage","endCursor","filter","Boolean","forEach","existingId","has","id","existingNode","find","innerNode","reporter","warn","formatLogMessage","databaseId","uri","info","add","push","store","dispatch","logger","incrementActivityTimer","typeName","by"],"sources":["../../../../src/steps/source-nodes/fetch-nodes/fetch-nodes-paginated.js"],"sourcesContent":["import fetchGraphql from \"~/utils/fetch-graphql\"\nimport store from \"~/store\"\nimport { formatLogMessage } from \"../../../utils/format-log-message\"\n\nexport const normalizeNode = ({ node, nodeTypeName }) => {\n  const normalizedNodeTypeName = node.__typename || nodeTypeName\n  // @todo is node.type used anywhere??\n  node.type = normalizedNodeTypeName\n  // this is used to filter node interfaces by content types\n  node.nodeType = normalizedNodeTypeName\n\n  return node\n}\n\n// this is used to determine wether we've already seen an id\n// for cold builds.\n// the reason we want to do this is to detect if we create 2 nodes with the same id\n// if we do there will be less nodes in Gatsby than in WP and users will be confused.\nconst idSet = new Set()\nlet hasLoggedDuplicateMessage = false\n\n/**\n * paginatedWpNodeFetch\n *\n * recursively fetches/paginates remote nodes\n */\nconst paginatedWpNodeFetch = async ({\n  contentTypePlural,\n  query,\n  nodeTypeName,\n  helpers,\n  throwFetchErrors = false,\n  throwGqlErrors = false,\n  allContentNodes = [],\n  after = null,\n  settings = {},\n  headers = {},\n  ...variables\n}) => {\n  if (\n    !settings.limit &&\n    typeof settings.limit === `number` &&\n    settings.limit === 0\n  ) {\n    // if the Type.limit plugin option is set to the number 0,\n    // we shouldn't fetch anything\n    return []\n  }\n\n  if (\n    settings.limit &&\n    // if we're about to fetch more than our limit\n    allContentNodes.length + variables.first > settings.limit\n  ) {\n    // just fetch whatever number is remaining\n    variables.first = settings.limit - allContentNodes.length\n  }\n\n  // if the GQL var \"first\" is greater than our Type.limit plugin option,\n  // that's no good\n  if (settings.limit && settings.limit < variables.first) {\n    // so just fetch our limit\n    variables.first = settings.limit\n  }\n\n  const errorContext = `Error occurred while fetching nodes of the \"${nodeTypeName}\" type.`\n\n  const response = await fetchGraphql({\n    query,\n    throwFetchErrors,\n    throwGqlErrors,\n    variables: {\n      ...variables,\n      after,\n    },\n    errorContext,\n    headers,\n  })\n\n  const { data } = response\n\n  if (!data?.[contentTypePlural]?.nodes) {\n    return allContentNodes\n  }\n\n  let {\n    [contentTypePlural]: { nodes, pageInfo },\n  } = data\n\n  const { hasNextPage, endCursor } = pageInfo || {}\n\n  // Sometimes private posts return as null.\n  // That causes problems for us so let's strip them out\n  nodes = nodes.filter(Boolean)\n\n  if (nodes && nodes.length) {\n    nodes.forEach(node => {\n      const existingId = idSet.has(node.id)\n\n      if (\n        existingId &&\n        // when the since variable is present\n        // we're fetching lists of node updates from WPGQL\n        // in that case we don't need to worry about logging duplicates\n        !(`since` in variables)\n      ) {\n        const existingNode = allContentNodes.find(\n          innerNode => innerNode.id === node.id\n        )\n\n        if (existingNode) {\n          if (!hasLoggedDuplicateMessage) {\n            hasLoggedDuplicateMessage = true\n            helpers.reporter.warn(\n              formatLogMessage(\n                `Found a duplicate ID in WordPress - this means you will have fewer nodes in Gatsby than in WordPress. This will need to be resolved in WP by identifying and fixing the underlying bug with your WP plugins or custom code.`\n              )\n            )\n          }\n\n          if (node?.databaseId && node?.uri && existingNode?.uri) {\n            helpers.reporter.info(\n              formatLogMessage(\n                `Node with ID ${node.databaseId}/${node.id} of type ${node.__typename} was fetched multiple times. This is a WPGraphQL bug where pagination returns duplicate nodes.`\n              )\n            )\n          }\n        }\n      } else {\n        idSet.add(node.id)\n      }\n\n      node = normalizeNode({ node, nodeTypeName })\n      allContentNodes.push(node)\n    })\n\n    // MediaItem type is incremented in createMediaItemNode\n    if (nodeTypeName !== `MediaItem`) {\n      store.dispatch.logger.incrementActivityTimer({\n        typeName: nodeTypeName,\n        by: nodes.length,\n      })\n    }\n  }\n\n  if (\n    hasNextPage &&\n    endCursor &&\n    (!settings.limit || settings.limit > allContentNodes.length)\n  ) {\n    return paginatedWpNodeFetch({\n      ...variables,\n      contentTypePlural,\n      nodeTypeName,\n      query,\n      allContentNodes,\n      helpers,\n      settings,\n      after: endCursor,\n      headers,\n    })\n  } else {\n    return allContentNodes\n  }\n}\n\nexport { paginatedWpNodeFetch }\n"],"mappings":"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"}