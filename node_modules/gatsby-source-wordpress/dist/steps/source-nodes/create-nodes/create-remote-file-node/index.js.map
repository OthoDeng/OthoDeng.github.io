{"version":3,"file":"index.js","names":["fs","require","remoteFileDownloaderBarPromise","got","createContentDigest","path","isWebUri","Queue","readChunk","fileType","createFileNode","getRemoteFileExtension","getRemoteFileName","createFilePath","cacheId","url","bar","totalJobs","STALL_RETRY_LIMIT","process","env","GATSBY_STALL_RETRY_LIMIT","parseInt","STALL_TIMEOUT","GATSBY_STALL_TIMEOUT","CONNECTION_TIMEOUT","GATSBY_CONNECTION_TIMEOUT","queue","getQueue","limit","pushToQueue","id","merge","old","_","cb","concurrent","on","awaitingCreateRemoteFileNodePromise","doneQueueTimeout","setTimeout","done","task","node","processRemoteNode","e","requestRemoteNode","headers","tmpFilename","httpOpts","attempt","Promise","resolve","reject","timeout","handleTimeout","fsWriteStream","close","removeSync","processingCache","total","Error","resetTimeout","clearTimeout","responseStream","stream","send","createWriteStream","pipe","error","console","response","cache","createNode","parentNodeId","auth","httpHeaders","createNodeId","ext","name","pluginCacheDir","directory","cachedHeaders","get","etag","htaccess_pass","htaccess_user","b64e","digest","statusCode","set","buffer","sync","minimumBytes","filetype","filename","join","String","move","overwrite","remove","fileNode","internal","description","parent","pushTask","push","err","module","exports","getCache","reporter","pluginOptions","type","MediaItem","localFile","requestConcurrency","decodeURI","encodeURI","undefined","createProgress","start","fileDownloadPromise","then","tick"],"sources":["../../../../../src/steps/source-nodes/create-nodes/create-remote-file-node/index.js"],"sourcesContent":["import { b64e } from \"~/utils/string-encoding\"\nconst fs = require(`fs-extra`)\nconst { remoteFileDownloaderBarPromise } = require(`./progress-bar-promise`)\nconst got = require(`got`)\nconst { createContentDigest } = require(`gatsby-core-utils`)\nconst path = require(`path`)\nconst { isWebUri } = require(`valid-url`)\nconst Queue = require(`better-queue`)\nconst readChunk = require(`read-chunk`)\nconst fileType = require(`file-type`)\n\nconst { createFileNode } = require(`gatsby-source-filesystem/create-file-node`)\nconst {\n  getRemoteFileExtension,\n  getRemoteFileName,\n  createFilePath,\n} = require(`gatsby-source-filesystem/utils`)\nconst cacheId = url => `create-remote-file-node-${url}`\n\nlet bar\n// Keep track of the total number of jobs we push in the queue\nlet totalJobs = 0\n\n/********************\n * Type Definitions *\n ********************/\n\n/**\n * @typedef {GatsbyCache}\n * @see gatsby/packages/gatsby/utils/cache.js\n */\n\n/**\n * @typedef {Reporter}\n * @see gatsby/packages/gatsby-cli/lib/reporter.js\n */\n\n/**\n * @typedef {Auth}\n * @type {Object}\n * @property {String} htaccess_pass\n * @property {String} htaccess_user\n */\n\n/**\n * @typedef {CreateRemoteFileNodePayload}\n * @typedef {Object}\n * @description Create Remote File Node Payload\n *\n * @param  {String} options.url\n * @param  {GatsbyCache} options.cache\n * @param  {Function} options.createNode\n * @param  {Function} options.getCache\n * @param  {Auth} [options.auth]\n * @param  {Reporter} [options.reporter]\n */\n\nconst STALL_RETRY_LIMIT = process.env.GATSBY_STALL_RETRY_LIMIT\n  ? parseInt(process.env.GATSBY_STALL_RETRY_LIMIT, 10)\n  : 3\nconst STALL_TIMEOUT = process.env.GATSBY_STALL_TIMEOUT\n  ? parseInt(process.env.GATSBY_STALL_TIMEOUT, 10)\n  : 30000\n\nconst CONNECTION_TIMEOUT = process.env.GATSBY_CONNECTION_TIMEOUT\n  ? parseInt(process.env.GATSBY_CONNECTION_TIMEOUT, 10)\n  : 30000\n\n/********************\n * Queue Management *\n ********************/\n\n/**\n * Queue\n * Use the task's url as the id\n * When pushing a task with a similar id, prefer the original task\n * as it's already in the processing cache\n */\n\nlet queue = null\n\nconst getQueue = limit => {\n  if (!queue) {\n    queue = new Queue(pushToQueue, {\n      id: `url`,\n      merge: (old, _, cb) => cb(old),\n      concurrent: limit || 100,\n    })\n    // when the queue is empty we stop the progressbar\n    queue.on(`drain`, async () => {\n      if (awaitingCreateRemoteFileNodePromise) {\n        return\n      }\n\n      awaitingCreateRemoteFileNodePromise = true\n      await remoteFileDownloaderBarPromise\n      awaitingCreateRemoteFileNodePromise = false\n\n      if (bar) {\n        // this is to give us a little time to wait and see if there\n        // will be more jobs added with a break between\n        // sometimes the queue empties but then is recreated within 2 secs\n        doneQueueTimeout = setTimeout(() => {\n          bar.done()\n          totalJobs = 0\n        }, 2000)\n      }\n    })\n  }\n  return queue\n}\n\nlet doneQueueTimeout\n\nlet awaitingCreateRemoteFileNodePromise\n\n/**\n * @callback {Queue~queueCallback}\n * @param {*} error\n * @param {*} result\n */\n\n/**\n * pushToQueue\n * --\n * Handle tasks that are pushed in to the Queue\n *\n *\n * @param  {CreateRemoteFileNodePayload}          task\n * @param  {Queue~queueCallback}  cb\n * @return {Promise<null>}\n */\nasync function pushToQueue(task, cb) {\n  try {\n    const node = await processRemoteNode(task)\n    return cb(null, node)\n  } catch (e) {\n    return cb(e)\n  }\n}\n\n/******************\n * Core Functions *\n ******************/\n\n/**\n * requestRemoteNode\n * --\n * Download the requested file\n *\n * @param  {String}   url\n * @param  {Headers}  headers\n * @param  {String}   tmpFilename\n * @param  {Object}   httpOpts\n * @param  {number}   attempt\n * @return {Promise<Object>}  Resolves with the [http Result Object]{@link https://nodejs.org/api/http.html#http_class_http_serverresponse}\n */\nconst requestRemoteNode = (url, headers, tmpFilename, httpOpts, attempt = 1) =>\n  new Promise((resolve, reject) => {\n    let timeout\n\n    // Called if we stall without receiving any data\n    const handleTimeout = async () => {\n      fsWriteStream.close()\n      fs.removeSync(tmpFilename)\n      if (attempt < STALL_RETRY_LIMIT) {\n        // Retry by calling ourself recursively\n        resolve(\n          requestRemoteNode(url, headers, tmpFilename, httpOpts, attempt + 1)\n        )\n      } else {\n        processingCache[url] = null\n        totalJobs -= 1\n        bar.total = totalJobs\n        reject(\n          new Error(\n            `Failed to download ${url} after ${STALL_RETRY_LIMIT} attempts`\n          )\n        )\n      }\n    }\n\n    const resetTimeout = () => {\n      if (timeout) {\n        clearTimeout(timeout)\n      }\n      timeout = setTimeout(handleTimeout, STALL_TIMEOUT)\n    }\n\n    const responseStream = got.stream(url, {\n      headers,\n      timeout: { send: CONNECTION_TIMEOUT },\n      ...httpOpts,\n    })\n    const fsWriteStream = fs.createWriteStream(tmpFilename)\n    responseStream.pipe(fsWriteStream)\n\n    // If there's a 400/500 response or other error.\n    responseStream.on(`error`, error => {\n      if (timeout) {\n        clearTimeout(timeout)\n      }\n      processingCache[url] = null\n      totalJobs -= 1\n      bar.total = totalJobs\n      fs.removeSync(tmpFilename)\n      console.error(error)\n      reject(error)\n    })\n\n    fsWriteStream.on(`error`, error => {\n      if (timeout) {\n        clearTimeout(timeout)\n      }\n      processingCache[url] = null\n      totalJobs -= 1\n      bar.total = totalJobs\n      reject(error)\n    })\n\n    responseStream.on(`response`, response => {\n      resetTimeout()\n\n      fsWriteStream.on(`finish`, () => {\n        if (timeout) {\n          clearTimeout(timeout)\n        }\n        resolve(response)\n      })\n    })\n  })\n\n/**\n * processRemoteNode\n * --\n * Request the remote file and return the fileNode\n *\n * @param {CreateRemoteFileNodePayload} options\n * @return {Promise<Object>} Resolves with the fileNode\n */\nasync function processRemoteNode({\n  url,\n  cache,\n  createNode,\n  parentNodeId,\n  auth = {},\n  httpHeaders = {},\n  createNodeId,\n  ext,\n  name,\n}) {\n  const pluginCacheDir = cache.directory\n  // See if there's response headers for this url\n  // from a previous request.\n  const cachedHeaders = await cache.get(cacheId(url))\n\n  const headers = { ...httpHeaders }\n  if (cachedHeaders && cachedHeaders.etag) {\n    headers[`If-None-Match`] = cachedHeaders.etag\n  }\n\n  // Add htaccess authentication if passed in. This isn't particularly\n  // extensible. We should define a proper API that we validate.\n  const httpOpts = {}\n  if (auth?.htaccess_pass && auth?.htaccess_user) {\n    headers[`Authorization`] = `Basic ${b64e(\n      `${auth.htaccess_user}:${auth.htaccess_pass}`\n    )}`\n  }\n\n  // Create the temp and permanent file names for the url.\n  const digest = createContentDigest(url)\n  if (!name) {\n    name = getRemoteFileName(url)\n  }\n  if (!ext) {\n    ext = getRemoteFileExtension(url)\n  }\n\n  const tmpFilename = createFilePath(pluginCacheDir, `tmp-${digest}`, ext)\n\n  // Fetch the file.\n  const response = await requestRemoteNode(url, headers, tmpFilename, httpOpts)\n\n  if (response.statusCode == 200) {\n    // Save the response headers for future requests.\n    await cache.set(cacheId(url), response.headers)\n  }\n\n  // If the user did not provide an extension and we couldn't get one from remote file, try and guess one\n  if (ext === ``) {\n    const buffer = readChunk.sync(tmpFilename, 0, fileType.minimumBytes)\n    const filetype = fileType(buffer)\n    if (filetype) {\n      ext = `.${filetype.ext}`\n    }\n  }\n\n  const filename = createFilePath(\n    path.join(pluginCacheDir, digest),\n    String(name),\n    ext\n  )\n\n  // If the status code is 200, move the piped temp file to the real name.\n  if (response.statusCode === 200) {\n    await fs.move(tmpFilename, filename, { overwrite: true })\n    // Else if 304, remove the empty response.\n  } else {\n    processingCache[url] = null\n    totalJobs -= 1\n\n    bar.total = totalJobs\n\n    await fs.remove(tmpFilename)\n  }\n\n  // Create the file node.\n  const fileNode = await createFileNode(filename, createNodeId, {})\n  fileNode.internal.description = `File \"${url}\"`\n  fileNode.url = url\n  fileNode.parent = parentNodeId\n  // Override the default plugin as gatsby-source-filesystem needs to\n  // be the owner of File nodes or there'll be conflicts if any other\n  // File nodes are created through normal usages of\n  // gatsby-source-filesystem.\n  await createNode(fileNode, { name: `gatsby-source-filesystem` })\n\n  return fileNode\n}\n\n/**\n * Index of promises resolving to File node from remote url\n */\nconst processingCache = {}\n/**\n * pushTask\n * --\n * pushes a task in to the Queue and the processing cache\n *\n * Promisfy a task in queue\n * @param {CreateRemoteFileNodePayload} task\n * @return {Promise<Object>}\n */\nconst pushTask = task =>\n  new Promise((resolve, reject) => {\n    getQueue(task.limit)\n      .push(task)\n      .on(`finish`, task => {\n        resolve(task)\n      })\n      .on(`failed`, err => {\n        reject(new Error(`failed to process ${task.url}\\n${err}`))\n      })\n  })\n\n/***************\n * Entry Point *\n ***************/\n\n/**\n * createRemoteFileNode\n * --\n *\n * Download a remote file\n * First checks cache to ensure duplicate requests aren't processed\n * Then pushes to a queue\n *\n * @param {CreateRemoteFileNodePayload} options\n * @return {Promise<Object>}                  Returns the created node\n */\nmodule.exports = ({\n  url,\n  cache,\n  createNode,\n  getCache,\n  parentNodeId = null,\n  auth = {},\n  httpHeaders = {},\n  createNodeId,\n  ext = null,\n  name = null,\n  reporter,\n  pluginOptions,\n}) => {\n  const limit = pluginOptions?.type?.MediaItem?.localFile?.requestConcurrency\n  if (doneQueueTimeout) {\n    // this is to give the bar a little time to wait when there are pauses\n    // between file downloads.\n    clearTimeout(doneQueueTimeout)\n  }\n\n  // if the url isn't already encoded\n  // so decoding it doesn't do anything\n  if (decodeURI(url) === url) {\n    // encode the uri\n    // this accounts for special characters in filenames\n    url = encodeURI(url)\n  }\n\n  // validation of the input\n  // without this it's notoriously easy to pass in the wrong `createNodeId`\n  // see gatsbyjs/gatsby#6643\n  if (typeof createNodeId !== `function`) {\n    throw new Error(\n      `createNodeId must be a function, was ${typeof createNodeId}`\n    )\n  }\n  if (typeof createNode !== `function`) {\n    throw new Error(`createNode must be a function, was ${typeof createNode}`)\n  }\n  if (typeof getCache === `function`) {\n    // use cache of this plugin and not cache of function caller\n    cache = getCache(`gatsby-source-filesystem`)\n  }\n  if (typeof cache !== `object`) {\n    throw new Error(\n      `Neither \"cache\" or \"getCache\" was passed. getCache must be function that return Gatsby cache, \"cache\" must be the Gatsby cache, was ${typeof cache}`\n    )\n  }\n\n  // Check if we already requested node for this remote file\n  // and return stored promise if we did.\n  if (processingCache[url]) {\n    return processingCache[url]\n  }\n\n  if (!url || isWebUri(url) === undefined) {\n    return Promise.reject(\n      new Error(\n        `url passed to create-remote-file-node is either missing or not a proper web uri: ${url}`\n      )\n    )\n  }\n\n  if (totalJobs === 0) {\n    bar = reporter.createProgress(`Downloading remote files`)\n    bar.start()\n  }\n\n  totalJobs += 1\n\n  bar.total = totalJobs\n\n  const fileDownloadPromise = pushTask({\n    url,\n    cache,\n    createNode,\n    parentNodeId,\n    createNodeId,\n    auth,\n    httpHeaders,\n    ext,\n    name,\n    limit,\n  })\n\n  processingCache[url] = fileDownloadPromise.then(node => {\n    bar.tick()\n\n    return node\n  })\n\n  return processingCache[url]\n}\n"],"mappings":"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"}