{"version":3,"file":"fetch-and-create-non-node-root-fields.js","names":["fetchAndCreateNonNodeRootFields","state","store","getState","remoteSchema","nonNodeQuery","gatsbyApi","helpers","pluginOptions","reporter","activity","activityTimer","formatLogMessage","start","data","fetchGraphql","query","errorContext","createdNodeIds","referencedMediaItemNodeIds","Set","type","schema","typePrefix","node","id","url","createRootNode","createNodeWithSideEffects","referencedMediaItemNodeIdsArray","newMediaItemIds","filter","getNode","MediaItem","lazyNodes","length","dispatch","logger","createActivityTimer","typeName","fetchReferencedMediaItemsAndCreateNodes","previouslyCachedNodeIds","getPersistentCache","key","CREATED_NODE_IDS","setPersistentCache","value","stopActivityTimer","end"],"sources":["../../../../src/steps/source-nodes/create-nodes/fetch-and-create-non-node-root-fields.js"],"sourcesContent":["import store from \"~/store\"\nimport fetchGraphql from \"~/utils/fetch-graphql\"\nimport { formatLogMessage } from \"~/utils/format-log-message\"\nimport { createNodeWithSideEffects } from \"./create-nodes\"\nimport fetchReferencedMediaItemsAndCreateNodes from \"../fetch-nodes/fetch-referenced-media-items\"\nimport { CREATED_NODE_IDS } from \"~/constants\"\nimport { getPersistentCache, setPersistentCache } from \"~/utils/cache\"\n\nconst fetchAndCreateNonNodeRootFields = async () => {\n  const state = store.getState()\n\n  const {\n    remoteSchema: { nonNodeQuery },\n    gatsbyApi: { helpers, pluginOptions },\n  } = state\n\n  const { reporter } = helpers\n\n  const activity = reporter.activityTimer(formatLogMessage(`fetch root fields`))\n\n  activity.start()\n\n  const { data } = await fetchGraphql({\n    query: nonNodeQuery,\n    errorContext: `Error occurred while fetching non-Node root fields.`,\n  })\n\n  const createdNodeIds = []\n  // const totalSideEffectNodes = []\n  const referencedMediaItemNodeIds = new Set()\n\n  const type = pluginOptions.schema.typePrefix\n\n  const node = {\n    ...data,\n    id: `${pluginOptions.url}--rootfields`,\n    type,\n  }\n\n  const createRootNode = createNodeWithSideEffects({\n    node,\n    state,\n    referencedMediaItemNodeIds,\n    createdNodeIds,\n    type,\n    // totalSideEffectNodes,\n  })\n\n  createRootNode()\n\n  const referencedMediaItemNodeIdsArray = [...referencedMediaItemNodeIds]\n\n  const newMediaItemIds = referencedMediaItemNodeIdsArray.filter(\n    id => !helpers.getNode(id)\n  )\n\n  /**\n   * if we're not lazy fetching media items, we need to fetch them\n   * upfront here\n   */\n  if (!pluginOptions.type.MediaItem.lazyNodes && newMediaItemIds.length) {\n    store.dispatch.logger.createActivityTimer({\n      typeName: `MediaItems`,\n      pluginOptions,\n      reporter,\n    })\n\n    await fetchReferencedMediaItemsAndCreateNodes({\n      referencedMediaItemNodeIds: newMediaItemIds,\n    })\n\n    const previouslyCachedNodeIds = await getPersistentCache({\n      key: CREATED_NODE_IDS,\n    })\n\n    const createdNodeIds = [\n      ...new Set([\n        ...(previouslyCachedNodeIds || []),\n        ...referencedMediaItemNodeIdsArray,\n      ]),\n    ]\n\n    // save the node id's so we can touch them on the next build\n    // so that we don't have to refetch all nodes\n    await setPersistentCache({ key: CREATED_NODE_IDS, value: createdNodeIds })\n\n    store.dispatch.logger.stopActivityTimer({\n      typeName: `MediaItems`,\n    })\n  }\n\n  activity.end()\n}\n\nexport default fetchAndCreateNonNodeRootFields\n"],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAMA,+BAA+B,GAAG,YAAY;EAClD,MAAMC,KAAK,GAAGC,cAAK,CAACC,QAAQ,EAAE;EAE9B,MAAM;IACJC,YAAY,EAAE;MAAEC;IAAa,CAAC;IAC9BC,SAAS,EAAE;MAAEC,OAAO;MAAEC;IAAc;EACtC,CAAC,GAAGP,KAAK;EAET,MAAM;IAAEQ;EAAS,CAAC,GAAGF,OAAO;EAE5B,MAAMG,QAAQ,GAAGD,QAAQ,CAACE,aAAa,CAAC,IAAAC,kCAAgB,EAAE,mBAAkB,CAAC,CAAC;EAE9EF,QAAQ,CAACG,KAAK,EAAE;EAEhB,MAAM;IAAEC;EAAK,CAAC,GAAG,MAAM,IAAAC,qBAAY,EAAC;IAClCC,KAAK,EAAEX,YAAY;IACnBY,YAAY,EAAG;EACjB,CAAC,CAAC;EAEF,MAAMC,cAAc,GAAG,EAAE;EACzB;EACA,MAAMC,0BAA0B,GAAG,IAAIC,GAAG,EAAE;EAE5C,MAAMC,IAAI,GAAGb,aAAa,CAACc,MAAM,CAACC,UAAU;EAE5C,MAAMC,IAAI,GAAG;IACX,GAAGV,IAAI;IACPW,EAAE,EAAG,GAAEjB,aAAa,CAACkB,GAAI,cAAa;IACtCL;EACF,CAAC;EAED,MAAMM,cAAc,GAAG,IAAAC,sCAAyB,EAAC;IAC/CJ,IAAI;IACJvB,KAAK;IACLkB,0BAA0B;IAC1BD,cAAc;IACdG;IACA;EACF,CAAC,CAAC;;EAEFM,cAAc,EAAE;EAEhB,MAAME,+BAA+B,GAAG,CAAC,GAAGV,0BAA0B,CAAC;EAEvE,MAAMW,eAAe,GAAGD,+BAA+B,CAACE,MAAM,CAC5DN,EAAE,IAAI,CAAClB,OAAO,CAACyB,OAAO,CAACP,EAAE,CAAC,CAC3B;;EAED;AACF;AACA;AACA;EACE,IAAI,CAACjB,aAAa,CAACa,IAAI,CAACY,SAAS,CAACC,SAAS,IAAIJ,eAAe,CAACK,MAAM,EAAE;IACrEjC,cAAK,CAACkC,QAAQ,CAACC,MAAM,CAACC,mBAAmB,CAAC;MACxCC,QAAQ,EAAG,YAAW;MACtB/B,aAAa;MACbC;IACF,CAAC,CAAC;IAEF,MAAM,IAAA+B,kCAAuC,EAAC;MAC5CrB,0BAA0B,EAAEW;IAC9B,CAAC,CAAC;IAEF,MAAMW,uBAAuB,GAAG,MAAM,IAAAC,yBAAkB,EAAC;MACvDC,GAAG,EAAEC;IACP,CAAC,CAAC;IAEF,MAAM1B,cAAc,GAAG,CACrB,GAAG,IAAIE,GAAG,CAAC,CACT,IAAIqB,uBAAuB,IAAI,EAAE,CAAC,EAClC,GAAGZ,+BAA+B,CACnC,CAAC,CACH;;IAED;IACA;IACA,MAAM,IAAAgB,yBAAkB,EAAC;MAAEF,GAAG,EAAEC,2BAAgB;MAAEE,KAAK,EAAE5B;IAAe,CAAC,CAAC;IAE1EhB,cAAK,CAACkC,QAAQ,CAACC,MAAM,CAACU,iBAAiB,CAAC;MACtCR,QAAQ,EAAG;IACb,CAAC,CAAC;EACJ;EAEA7B,QAAQ,CAACsC,GAAG,EAAE;AAChB,CAAC;AAAA,eAEchD,+BAA+B;AAAA"}